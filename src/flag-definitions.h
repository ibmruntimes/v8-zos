// Copyright 2012 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file defines all of the flags.  It is separated into different section,
// for Debug, Release, Logging and Profiling, etc.  To add a new flag, find the
// correct section, and use one of the DEFINE_ macros, without a trailing ';'.
//
// This include does not have a guard, because it is a template-style include,
// which can be included multiple times in different modes.  It expects to have
// a mode defined before it's included.  The modes are FLAG_MODE_... below:

#define DEFINE_IMPLICATION(whenflag, thenflag)              \
  DEFINE_VALUE_IMPLICATION(whenflag, thenflag, true)

#define DEFINE_NEG_IMPLICATION(whenflag, thenflag)          \
  DEFINE_VALUE_IMPLICATION(whenflag, thenflag, false)

#define DEFINE_NEG_NEG_IMPLICATION(whenflag, thenflag) \
  DEFINE_NEG_VALUE_IMPLICATION(whenflag, thenflag, false)

// We want to declare the names of the variables for the header file.  Normally
// this will just be an extern declaration, but for a readonly flag we let the
// compiler make better optimizations by giving it the value.
#if defined(FLAG_MODE_DECLARE)
#define FLAG_FULL(ftype, ctype, nam, def, cmt) extern ctype FLAG_##nam;
#define FLAG_READONLY(ftype, ctype, nam, def, cmt) \
  static ctype const FLAG_##nam = def;

// We want to supply the actual storage and value for the flag variable in the
// .cc file.  We only do this for writable flags.
#elif defined(FLAG_MODE_DEFINE)
#define FLAG_FULL(ftype, ctype, nam, def, cmt) ctype FLAG_##nam = def;

// We need to define all of our default values so that the Flag structure can
// access them by pointer.  These are just used internally inside of one .cc,
// for MODE_META, so there is no impact on the flags interface.
#elif defined(FLAG_MODE_DEFINE_DEFAULTS)
#define FLAG_FULL(ftype, ctype, nam, def, cmt) \
  static ctype const FLAGDEFAULT_##nam = def;

// We want to write entries into our meta data table, for internal parsing and
// printing / etc in the flag parser code.  We only do this for writable flags.
#elif defined(FLAG_MODE_META)
#define FLAG_FULL(ftype, ctype, nam, def, cmt)                              \
  { Flag::TYPE_##ftype, USTR(#nam), &FLAG_##nam, &FLAGDEFAULT_##nam, cmt, false } \
  ,
#define FLAG_ALIAS(ftype, ctype, alias, nam)                     \
  {                                                              \
    Flag::TYPE_##ftype, USTR(#alias), &FLAG_##nam, &FLAGDEFAULT_##nam, \
        "\x61\x6c\x69\x61\x73\x20\x66\x6f\x72\x20\x2d\x2d" #nam, false                               \
  }                                                              \
  ,

// We produce the code to set flags when it is implied by another flag.
#elif defined(FLAG_MODE_DEFINE_IMPLICATIONS)
#define DEFINE_VALUE_IMPLICATION(whenflag, thenflag, value) \
  if (FLAG_##whenflag) FLAG_##thenflag = value;

#define DEFINE_NEG_VALUE_IMPLICATION(whenflag, thenflag, value) \
  if (!FLAG_##whenflag) FLAG_##thenflag = value;

#else
#error No mode supplied when including flags.defs
#endif

// Dummy defines for modes where it is not relevant.
#ifndef FLAG_FULL
#define FLAG_FULL(ftype, ctype, nam, def, cmt)
#endif

#ifndef FLAG_READONLY
#define FLAG_READONLY(ftype, ctype, nam, def, cmt)
#endif

#ifndef FLAG_ALIAS
#define FLAG_ALIAS(ftype, ctype, alias, nam)
#endif

#ifndef DEFINE_VALUE_IMPLICATION
#define DEFINE_VALUE_IMPLICATION(whenflag, thenflag, value)
#endif

#ifndef DEFINE_NEG_VALUE_IMPLICATION
#define DEFINE_NEG_VALUE_IMPLICATION(whenflag, thenflag, value)
#endif

#define COMMA ,

#ifdef FLAG_MODE_DECLARE
// Structure used to hold a collection of arguments to the JavaScript code.
struct JSArguments {
 public:
  inline const char*& operator[](int idx) const { return argv[idx]; }
  static JSArguments Create(int argc, const char** argv) {
    JSArguments args;
    args.argc = argc;
    args.argv = argv;
    return args;
  }
  int argc;
  const char** argv;
};

struct MaybeBoolFlag {
  static MaybeBoolFlag Create(bool has_value, bool value) {
    MaybeBoolFlag flag;
    flag.has_value = has_value;
    flag.value = value;
    return flag;
  }
  bool has_value;
  bool value;
};
#endif

#ifdef DEBUG
#define DEBUG_BOOL true
#else
#define DEBUG_BOOL false
#endif
#if (defined CAN_USE_VFP3_INSTRUCTIONS) || !(defined ARM_TEST_NO_FEATURE_PROBE)
#define ENABLE_VFP3_DEFAULT true
#else
#define ENABLE_VFP3_DEFAULT false
#endif
#if (defined CAN_USE_ARMV7_INSTRUCTIONS) || !(defined ARM_TEST_NO_FEATURE_PROBE)
#define ENABLE_ARMV7_DEFAULT true
#else
#define ENABLE_ARMV7_DEFAULT false
#endif
#if (defined CAN_USE_ARMV8_INSTRUCTIONS) || !(defined ARM_TEST_NO_FEATURE_PROBE)
#define ENABLE_ARMV8_DEFAULT true
#else
#define ENABLE_ARMV8_DEFAULT false
#endif
#if (defined CAN_USE_VFP32DREGS) || !(defined ARM_TEST_NO_FEATURE_PROBE)
#define ENABLE_32DREGS_DEFAULT true
#else
#define ENABLE_32DREGS_DEFAULT false
#endif
#if (defined CAN_USE_NEON) || !(defined ARM_TEST_NO_FEATURE_PROBE)
# define ENABLE_NEON_DEFAULT true
#else
# define ENABLE_NEON_DEFAULT false
#endif
#ifdef V8_OS_WIN
# define ENABLE_LOG_COLOUR false
#else
# define ENABLE_LOG_COLOUR true
#endif

#define DEFINE_BOOL(nam, def, cmt) FLAG(BOOL, bool, nam, def, cmt)
#define DEFINE_BOOL_READONLY(nam, def, cmt) \
  FLAG_READONLY(BOOL, bool, nam, def, cmt)
#define DEFINE_MAYBE_BOOL(nam, cmt) \
  FLAG(MAYBE_BOOL, MaybeBoolFlag, nam, {false COMMA false}, cmt)
#define DEFINE_INT(nam, def, cmt) FLAG(INT, int, nam, def, cmt)
#define DEFINE_FLOAT(nam, def, cmt) FLAG(FLOAT, double, nam, def, cmt)
#define DEFINE_STRING(nam, def, cmt) FLAG(STRING, const char*, nam, def, cmt)
#define DEFINE_ARGS(nam, cmt) FLAG(ARGS, JSArguments, nam, {0 COMMA NULL}, cmt)

#define DEFINE_ALIAS_BOOL(alias, nam) FLAG_ALIAS(BOOL, bool, alias, nam)
#define DEFINE_ALIAS_INT(alias, nam) FLAG_ALIAS(INT, int, alias, nam)
#define DEFINE_ALIAS_FLOAT(alias, nam) FLAG_ALIAS(FLOAT, double, alias, nam)
#define DEFINE_ALIAS_STRING(alias, nam) \
  FLAG_ALIAS(STRING, const char*, alias, nam)
#define DEFINE_ALIAS_ARGS(alias, nam) FLAG_ALIAS(ARGS, JSArguments, alias, nam)

//
// Flags in all modes.
//
#define FLAG FLAG_FULL

DEFINE_BOOL(experimental_extras, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x63\x6f\x64\x65\x20\x63\x6f\x6d\x70\x69\x6c\x65\x64\x20\x69\x6e\x20\x76\x69\x61\x20\x76\x38\x5f\x65\x78\x70\x65\x72\x69\x6d\x65\x6e\x74\x61\x6c\x5f\x65\x78\x74\x72\x61\x5f\x6c\x69\x62\x72\x61\x72\x79\x5f\x66\x69\x6c\x65\x73")

// Flags for language modes and experimental language features.
DEFINE_BOOL(use_strict, false, "\x65\x6e\x66\x6f\x72\x63\x65\x20\x73\x74\x72\x69\x63\x74\x20\x6d\x6f\x64\x65")

DEFINE_BOOL(es_staging, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x74\x65\x73\x74\x2d\x77\x6f\x72\x74\x68\x79\x20\x68\x61\x72\x6d\x6f\x6e\x79\x20\x66\x65\x61\x74\x75\x72\x65\x73\x20\x28\x66\x6f\x72\x20\x69\x6e\x74\x65\x72\x6e\x61\x6c\x20\x75\x73\x65\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(harmony, false, "\x65\x6e\x61\x62\x6c\x65\x20\x61\x6c\x6c\x20\x63\x6f\x6d\x70\x6c\x65\x74\x65\x64\x20\x68\x61\x72\x6d\x6f\x6e\x79\x20\x66\x65\x61\x74\x75\x72\x65\x73")
DEFINE_BOOL(harmony_shipping, true, "\x65\x6e\x61\x62\x6c\x65\x20\x61\x6c\x6c\x20\x73\x68\x69\x70\x70\x65\x64\x20\x68\x61\x72\x6d\x6f\x6e\x79\x20\x66\x65\x61\x74\x75\x72\x65\x73")
DEFINE_IMPLICATION(es_staging, harmony)

DEFINE_BOOL(promise_extra, true, "\x61\x64\x64\x69\x74\x69\x6f\x6e\x61\x6c\x20\x56\x38\x20\x50\x72\x6f\x6d\x69\x73\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73")
// Removing extra Promise functions is staged
DEFINE_NEG_IMPLICATION(harmony, promise_extra)

// Activate on ClusterFuzz.
DEFINE_IMPLICATION(es_staging, harmony_regexp_lookbehind)
DEFINE_IMPLICATION(es_staging, move_object_start)

// Features that are still work in progress (behind individual flags).
#define HARMONY_INPROGRESS(V)                                           \
  V(harmony_object_observe, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x4f\x62\x6a\x65\x63\x74\x2e\x6f\x62\x73\x65\x72\x76\x65")                   \
  V(harmony_function_sent, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x2e\x73\x65\x6e\x74")                     \
  V(harmony_sharedarraybuffer, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x73\x68\x61\x72\x65\x64\x61\x72\x72\x61\x79\x62\x75\x66\x66\x65\x72")             \
  V(harmony_simd, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x73\x69\x6d\x64")                                       \
  V(harmony_do_expressions, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x64\x6f\x2d\x65\x78\x70\x72\x65\x73\x73\x69\x6f\x6e\x73")                   \
  V(harmony_regexp_property, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x75\x6e\x69\x63\x6f\x64\x65\x20\x72\x65\x67\x65\x78\x70\x20\x70\x72\x6f\x70\x65\x72\x74\x79\x20\x63\x6c\x61\x73\x73\x65\x73") \
  V(harmony_string_padding, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x53\x74\x72\x69\x6e\x67\x2d\x70\x61\x64\x64\x69\x6e\x67\x20\x6d\x65\x74\x68\x6f\x64\x73")

// Features that are complete (but still behind --harmony/es-staging flag).
#define HARMONY_STAGED(V)                                                    \
  V(harmony_regexp_lookbehind, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x72\x65\x67\x65\x78\x70\x20\x6c\x6f\x6f\x6b\x62\x65\x68\x69\x6e\x64")                  \
  V(harmony_tailcalls, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x74\x61\x69\x6c\x20\x63\x61\x6c\x6c\x73")                                 \
  V(harmony_object_values_entries, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x4f\x62\x6a\x65\x63\x74\x2e\x76\x61\x6c\x75\x65\x73\x20\x2f\x20\x4f\x62\x6a\x65\x63\x74\x2e\x65\x6e\x74\x72\x69\x65\x73") \
  V(harmony_object_own_property_descriptors,                                 \
    "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x4f\x62\x6a\x65\x63\x74\x2e\x67\x65\x74\x4f\x77\x6e\x50\x72\x6f\x70\x65\x72\x74\x79\x44\x65\x73\x63\x72\x69\x70\x74\x6f\x72\x73\x28\x29")                            \
  V(harmony_exponentiation_operator, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x65\x78\x70\x6f\x6e\x65\x6e\x74\x69\x61\x74\x69\x6f\x6e\x20\x6f\x70\x65\x72\x61\x74\x6f\x72\x20\x60\x2a\x2a\x60")

// Features that are shipping (turned on by default, but internal flag remains).
#define HARMONY_SHIPPING(V)                                           \
  V(harmony_array_prototype_values, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x41\x72\x72\x61\x79\x2e\x70\x72\x6f\x74\x6f\x74\x79\x70\x65\x2e\x76\x61\x6c\x75\x65\x73") \
  V(harmony_function_name, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x6e\x61\x6d\x65\x20\x69\x6e\x66\x65\x72\x65\x6e\x63\x65")         \
  V(harmony_instanceof, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x69\x6e\x73\x74\x61\x6e\x63\x65\x6f\x66\x20\x73\x75\x70\x70\x6f\x72\x74")                 \
  V(harmony_iterator_close, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x69\x74\x65\x72\x61\x74\x6f\x72\x20\x66\x69\x6e\x61\x6c\x69\x7a\x61\x74\x69\x6f\x6e")          \
  V(harmony_unicode_regexps, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x75\x6e\x69\x63\x6f\x64\x65\x20\x72\x65\x67\x65\x78\x70\x73")               \
  V(harmony_regexp_exec, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x52\x65\x67\x45\x78\x70\x20\x65\x78\x65\x63\x20\x6f\x76\x65\x72\x72\x69\x64\x65\x20\x62\x65\x68\x61\x76\x69\x6f\x72")     \
  V(harmony_sloppy, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x66\x65\x61\x74\x75\x72\x65\x73\x20\x69\x6e\x20\x73\x6c\x6f\x70\x70\x79\x20\x6d\x6f\x64\x65")                \
  V(harmony_sloppy_let, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x6c\x65\x74\x20\x69\x6e\x20\x73\x6c\x6f\x70\x70\x79\x20\x6d\x6f\x64\x65")                 \
  V(harmony_sloppy_function, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x73\x6c\x6f\x70\x70\x79\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x62\x6c\x6f\x63\x6b\x20\x73\x63\x6f\x70\x69\x6e\x67") \
  V(harmony_regexp_subclass, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x72\x65\x67\x65\x78\x70\x20\x73\x75\x62\x63\x6c\x61\x73\x73\x69\x6e\x67")            \
  V(harmony_restrictive_declarations,                                 \
    "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x6c\x69\x6d\x69\x74\x61\x74\x69\x6f\x6e\x73\x20\x6f\x6e\x20\x73\x6c\x6f\x70\x70\x79\x20\x6d\x6f\x64\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x64\x65\x63\x6c\x61\x72\x61\x74\x69\x6f\x6e\x73")       \
  V(harmony_species, "\x68\x61\x72\x6d\x6f\x6e\x79\x20\x53\x79\x6d\x62\x6f\x6c\x2e\x73\x70\x65\x63\x69\x65\x73")

// Once a shipping feature has proved stable in the wild, it will be dropped
// from HARMONY_SHIPPING, all occurrences of the FLAG_ variable are removed,
// and associated tests are moved from the harmony directory to the appropriate
// esN directory.


#define FLAG_INPROGRESS_FEATURES(id, description) \
  DEFINE_BOOL(id, false, "\x65\x6e\x61\x62\x6c\x65\x20" USTR(#description) "\x20\x28\x69\x6e\x20\x70\x72\x6f\x67\x72\x65\x73\x73\x29")
HARMONY_INPROGRESS(FLAG_INPROGRESS_FEATURES)
#undef FLAG_INPROGRESS_FEATURES

#define FLAG_STAGED_FEATURES(id, description) \
  DEFINE_BOOL(id, false, "\x65\x6e\x61\x62\x6c\x65\x20" USTR(#description)) \
  DEFINE_IMPLICATION(harmony, id)
HARMONY_STAGED(FLAG_STAGED_FEATURES)
#undef FLAG_STAGED_FEATURES

#define FLAG_SHIPPING_FEATURES(id, description) \
  DEFINE_BOOL(id, true, "\x65\x6e\x61\x62\x6c\x65\x20" USTR(#description)) \
  DEFINE_NEG_NEG_IMPLICATION(harmony_shipping, id)
HARMONY_SHIPPING(FLAG_SHIPPING_FEATURES)
#undef FLAG_SHIPPING_FEATURES


// Feature dependencies.
DEFINE_IMPLICATION(harmony_sloppy_let, harmony_sloppy)
DEFINE_IMPLICATION(harmony_sloppy_function, harmony_sloppy)

// Flags for experimental implementation features.
DEFINE_BOOL(compiled_keyed_generic_loads, false,
            "\x75\x73\x65\x20\x6f\x70\x74\x69\x6d\x69\x7a\x69\x6e\x67\x20\x63\x6f\x6d\x70\x69\x6c\x65\x72\x20\x74\x6f\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x20\x6b\x65\x79\x65\x64\x20\x67\x65\x6e\x65\x72\x69\x63\x20\x6c\x6f\x61\x64\x20\x73\x74\x75\x62\x73")
DEFINE_BOOL(allocation_site_pretenuring, true,
            "\x70\x72\x65\x74\x65\x6e\x75\x72\x65\x20\x77\x69\x74\x68\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x73\x69\x74\x65\x73")
DEFINE_BOOL(trace_pretenuring, false,
            "\x74\x72\x61\x63\x65\x20\x70\x72\x65\x74\x65\x6e\x75\x72\x69\x6e\x67\x20\x64\x65\x63\x69\x73\x69\x6f\x6e\x73\x20\x6f\x66\x20\x48\x41\x6c\x6c\x6f\x63\x61\x74\x65\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(trace_pretenuring_statistics, false,
            "\x74\x72\x61\x63\x65\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x73\x69\x74\x65\x20\x70\x72\x65\x74\x65\x6e\x75\x72\x69\x6e\x67\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73")
DEFINE_BOOL(track_fields, true, "\x74\x72\x61\x63\x6b\x20\x66\x69\x65\x6c\x64\x73\x20\x77\x69\x74\x68\x20\x6f\x6e\x6c\x79\x20\x73\x6d\x69\x20\x76\x61\x6c\x75\x65\x73")
DEFINE_BOOL(track_double_fields, true, "\x74\x72\x61\x63\x6b\x20\x66\x69\x65\x6c\x64\x73\x20\x77\x69\x74\x68\x20\x64\x6f\x75\x62\x6c\x65\x20\x76\x61\x6c\x75\x65\x73")
DEFINE_BOOL(track_heap_object_fields, true, "\x74\x72\x61\x63\x6b\x20\x66\x69\x65\x6c\x64\x73\x20\x77\x69\x74\x68\x20\x68\x65\x61\x70\x20\x76\x61\x6c\x75\x65\x73")
DEFINE_BOOL(track_computed_fields, true, "\x74\x72\x61\x63\x6b\x20\x63\x6f\x6d\x70\x75\x74\x65\x64\x20\x62\x6f\x69\x6c\x65\x72\x70\x6c\x61\x74\x65\x20\x66\x69\x65\x6c\x64\x73")
DEFINE_BOOL(harmony_instanceof_opt, true, "\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x45\x53\x36\x20\x69\x6e\x73\x74\x61\x6e\x63\x65\x6f\x66\x20\x73\x75\x70\x70\x6f\x72\x74")
DEFINE_IMPLICATION(track_double_fields, track_fields)
DEFINE_IMPLICATION(track_heap_object_fields, track_fields)
DEFINE_IMPLICATION(track_computed_fields, track_fields)
DEFINE_BOOL(track_field_types, true, "\x74\x72\x61\x63\x6b\x20\x66\x69\x65\x6c\x64\x20\x74\x79\x70\x65\x73")
DEFINE_IMPLICATION(track_field_types, track_fields)
DEFINE_IMPLICATION(track_field_types, track_heap_object_fields)
DEFINE_BOOL(smi_binop, true, "\x73\x75\x70\x70\x6f\x72\x74\x20\x73\x6d\x69\x20\x72\x65\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x69\x6e\x20\x62\x69\x6e\x61\x72\x79\x20\x6f\x70\x65\x72\x61\x74\x69\x6f\x6e\x73")

// Flags for optimization types.
DEFINE_BOOL(optimize_for_size, false,
            "\x45\x6e\x61\x62\x6c\x65\x73\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x73\x20\x77\x68\x69\x63\x68\x20\x66\x61\x76\x6f\x72\x20\x6d\x65\x6d\x6f\x72\x79\x20\x73\x69\x7a\x65\x20\x6f\x76\x65\x72\x20\x65\x78\x65\x63\x75\x74\x69\x6f\x6e\x20"
            "\x73\x70\x65\x65\x64")

DEFINE_VALUE_IMPLICATION(optimize_for_size, max_semi_space_size, 1)

// Flags for data representation optimizations
DEFINE_BOOL(unbox_double_arrays, true, "\x61\x75\x74\x6f\x6d\x61\x74\x69\x63\x61\x6c\x6c\x79\x20\x75\x6e\x62\x6f\x78\x20\x61\x72\x72\x61\x79\x73\x20\x6f\x66\x20\x64\x6f\x75\x62\x6c\x65\x73")
DEFINE_BOOL(string_slices, true, "\x75\x73\x65\x20\x73\x74\x72\x69\x6e\x67\x20\x73\x6c\x69\x63\x65\x73")

// Flags for Ignition.
DEFINE_BOOL(ignition, false, "\x75\x73\x65\x20\x69\x67\x6e\x69\x74\x69\x6f\x6e\x20\x69\x6e\x74\x65\x72\x70\x72\x65\x74\x65\x72")
DEFINE_BOOL(ignition_eager, true, "\x65\x61\x67\x65\x72\x6c\x79\x20\x63\x6f\x6d\x70\x69\x6c\x65\x20\x61\x6e\x64\x20\x70\x61\x72\x73\x65\x20\x77\x69\x74\x68\x20\x69\x67\x6e\x69\x74\x69\x6f\x6e")
DEFINE_STRING(ignition_filter, "\x2a", "\x66\x69\x6c\x74\x65\x72\x20\x66\x6f\x72\x20\x69\x67\x6e\x69\x74\x69\x6f\x6e\x20\x69\x6e\x74\x65\x72\x70\x72\x65\x74\x65\x72")
DEFINE_BOOL(print_bytecode, false,
            "\x70\x72\x69\x6e\x74\x20\x62\x79\x74\x65\x63\x6f\x64\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x62\x79\x20\x69\x67\x6e\x69\x74\x69\x6f\x6e\x20\x69\x6e\x74\x65\x72\x70\x72\x65\x74\x65\x72")
DEFINE_BOOL(trace_ignition, false,
            "\x74\x72\x61\x63\x65\x20\x74\x68\x65\x20\x62\x79\x74\x65\x63\x6f\x64\x65\x73\x20\x65\x78\x65\x63\x75\x74\x65\x64\x20\x62\x79\x20\x74\x68\x65\x20\x69\x67\x6e\x69\x74\x69\x6f\x6e\x20\x69\x6e\x74\x65\x72\x70\x72\x65\x74\x65\x72")
DEFINE_BOOL(trace_ignition_codegen, false,
            "\x74\x72\x61\x63\x65\x20\x74\x68\x65\x20\x63\x6f\x64\x65\x67\x65\x6e\x20\x6f\x66\x20\x69\x67\x6e\x69\x74\x69\x6f\x6e\x20\x69\x6e\x74\x65\x72\x70\x72\x65\x74\x65\x72\x20\x62\x79\x74\x65\x63\x6f\x64\x65\x20\x68\x61\x6e\x64\x6c\x65\x72\x73")

// Flags for Crankshaft.
DEFINE_BOOL(crankshaft, false, "\x75\x73\x65\x20\x63\x72\x61\x6e\x6b\x73\x68\x61\x66\x74")
DEFINE_STRING(hydrogen_filter, "\x2a", "\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x66\x69\x6c\x74\x65\x72")
DEFINE_BOOL(use_gvn, true, "\x75\x73\x65\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x67\x6c\x6f\x62\x61\x6c\x20\x76\x61\x6c\x75\x65\x20\x6e\x75\x6d\x62\x65\x72\x69\x6e\x67")
DEFINE_INT(gvn_iterations, 3, "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x47\x56\x4e\x20\x66\x69\x78\x2d\x70\x6f\x69\x6e\x74\x20\x69\x74\x65\x72\x61\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(use_canonicalizing, true, "\x75\x73\x65\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x63\x61\x6e\x6f\x6e\x69\x63\x61\x6c\x69\x7a\x69\x6e\x67")
DEFINE_BOOL(use_inlining, true, "\x75\x73\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67")
DEFINE_BOOL(use_escape_analysis, true, "\x75\x73\x65\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x65\x73\x63\x61\x70\x65\x20\x61\x6e\x61\x6c\x79\x73\x69\x73")
DEFINE_BOOL(use_allocation_folding, true, "\x75\x73\x65\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x66\x6f\x6c\x64\x69\x6e\x67")
DEFINE_BOOL(use_local_allocation_folding, false, "\x6f\x6e\x6c\x79\x20\x66\x6f\x6c\x64\x20\x69\x6e\x20\x62\x61\x73\x69\x63\x20\x62\x6c\x6f\x63\x6b\x73")
DEFINE_BOOL(use_write_barrier_elimination, true,
            "\x65\x6c\x69\x6d\x69\x6e\x61\x74\x65\x20\x77\x72\x69\x74\x65\x20\x62\x61\x72\x72\x69\x65\x72\x73\x20\x74\x61\x72\x67\x65\x74\x69\x6e\x67\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x73\x20\x69\x6e\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65")
DEFINE_INT(max_inlining_levels, 5, "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67\x20\x6c\x65\x76\x65\x6c\x73")
DEFINE_INT(max_inlined_source_size, 600,
           "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x73\x6f\x75\x72\x63\x65\x20\x73\x69\x7a\x65\x20\x69\x6e\x20\x62\x79\x74\x65\x73\x20\x63\x6f\x6e\x73\x69\x64\x65\x72\x65\x64\x20\x66\x6f\x72\x20\x61\x20\x73\x69\x6e\x67\x6c\x65\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67")
DEFINE_INT(max_inlined_nodes, 196,
           "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x41\x53\x54\x20\x6e\x6f\x64\x65\x73\x20\x63\x6f\x6e\x73\x69\x64\x65\x72\x65\x64\x20\x66\x6f\x72\x20\x61\x20\x73\x69\x6e\x67\x6c\x65\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67")
DEFINE_INT(max_inlined_nodes_cumulative, 400,
           "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x63\x75\x6d\x75\x6c\x61\x74\x69\x76\x65\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x41\x53\x54\x20\x6e\x6f\x64\x65\x73\x20\x63\x6f\x6e\x73\x69\x64\x65\x72\x65\x64\x20\x66\x6f\x72\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67")
DEFINE_BOOL(loop_invariant_code_motion, true, "\x6c\x6f\x6f\x70\x20\x69\x6e\x76\x61\x72\x69\x61\x6e\x74\x20\x63\x6f\x64\x65\x20\x6d\x6f\x74\x69\x6f\x6e")
DEFINE_BOOL(fast_math, true, "\x66\x61\x73\x74\x65\x72\x20\x28\x62\x75\x74\x20\x6d\x61\x79\x62\x65\x20\x6c\x65\x73\x73\x20\x61\x63\x63\x75\x72\x61\x74\x65\x29\x20\x6d\x61\x74\x68\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(collect_megamorphic_maps_from_stub_cache, false,
            "\x63\x72\x61\x6e\x6b\x73\x68\x61\x66\x74\x20\x68\x61\x72\x76\x65\x73\x74\x73\x20\x74\x79\x70\x65\x20\x66\x65\x65\x64\x62\x61\x63\x6b\x20\x66\x72\x6f\x6d\x20\x73\x74\x75\x62\x20\x63\x61\x63\x68\x65")
DEFINE_BOOL(hydrogen_stats, false, "\x70\x72\x69\x6e\x74\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x66\x6f\x72\x20\x68\x79\x64\x72\x6f\x67\x65\x6e")
DEFINE_BOOL(trace_check_elimination, false, "\x74\x72\x61\x63\x65\x20\x63\x68\x65\x63\x6b\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e\x20\x70\x68\x61\x73\x65")
DEFINE_BOOL(trace_environment_liveness, false,
            "\x74\x72\x61\x63\x65\x20\x6c\x69\x76\x65\x6e\x65\x73\x73\x20\x6f\x66\x20\x6c\x6f\x63\x61\x6c\x20\x76\x61\x72\x69\x61\x62\x6c\x65\x20\x73\x6c\x6f\x74\x73")
DEFINE_BOOL(trace_hydrogen, false, "\x74\x72\x61\x63\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x74\x6f\x20\x66\x69\x6c\x65")
DEFINE_STRING(trace_hydrogen_filter, "\x2a", "\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x74\x72\x61\x63\x69\x6e\x67\x20\x66\x69\x6c\x74\x65\x72")
DEFINE_BOOL(trace_hydrogen_stubs, false, "\x74\x72\x61\x63\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x66\x6f\x72\x20\x73\x74\x75\x62\x73")
DEFINE_STRING(trace_hydrogen_file, NULL, "\x74\x72\x61\x63\x65\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x74\x6f\x20\x67\x69\x76\x65\x6e\x20\x66\x69\x6c\x65\x20\x6e\x61\x6d\x65")
DEFINE_STRING(trace_phase, "\x48\x4c\x5a", "\x74\x72\x61\x63\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x49\x52\x20\x66\x6f\x72\x20\x73\x70\x65\x63\x69\x66\x69\x65\x64\x20\x70\x68\x61\x73\x65\x73")
DEFINE_BOOL(trace_inlining, false, "\x74\x72\x61\x63\x65\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67\x20\x64\x65\x63\x69\x73\x69\x6f\x6e\x73")
DEFINE_BOOL(trace_load_elimination, false, "\x74\x72\x61\x63\x65\x20\x6c\x6f\x61\x64\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_store_elimination, false, "\x74\x72\x61\x63\x65\x20\x73\x74\x6f\x72\x65\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_alloc, false, "\x74\x72\x61\x63\x65\x20\x72\x65\x67\x69\x73\x74\x65\x72\x20\x61\x6c\x6c\x6f\x63\x61\x74\x6f\x72")
DEFINE_BOOL(trace_all_uses, false, "\x74\x72\x61\x63\x65\x20\x61\x6c\x6c\x20\x75\x73\x65\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(trace_range, false, "\x74\x72\x61\x63\x65\x20\x72\x61\x6e\x67\x65\x20\x61\x6e\x61\x6c\x79\x73\x69\x73")
DEFINE_BOOL(trace_gvn, false, "\x74\x72\x61\x63\x65\x20\x67\x6c\x6f\x62\x61\x6c\x20\x76\x61\x6c\x75\x65\x20\x6e\x75\x6d\x62\x65\x72\x69\x6e\x67")
DEFINE_BOOL(trace_representation, false, "\x74\x72\x61\x63\x65\x20\x72\x65\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x74\x79\x70\x65\x73")
DEFINE_BOOL(trace_removable_simulates, false, "\x74\x72\x61\x63\x65\x20\x72\x65\x6d\x6f\x76\x61\x62\x6c\x65\x20\x73\x69\x6d\x75\x6c\x61\x74\x65\x73")
DEFINE_BOOL(trace_escape_analysis, false, "\x74\x72\x61\x63\x65\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x65\x73\x63\x61\x70\x65\x20\x61\x6e\x61\x6c\x79\x73\x69\x73")
DEFINE_BOOL(trace_allocation_folding, false, "\x74\x72\x61\x63\x65\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x66\x6f\x6c\x64\x69\x6e\x67")
DEFINE_BOOL(trace_track_allocation_sites, false,
            "\x74\x72\x61\x63\x65\x20\x74\x68\x65\x20\x74\x72\x61\x63\x6b\x69\x6e\x67\x20\x6f\x66\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x73\x69\x74\x65\x73")
DEFINE_BOOL(trace_migration, false, "\x74\x72\x61\x63\x65\x20\x6f\x62\x6a\x65\x63\x74\x20\x6d\x69\x67\x72\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_generalization, false, "\x74\x72\x61\x63\x65\x20\x6d\x61\x70\x20\x67\x65\x6e\x65\x72\x61\x6c\x69\x7a\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(stress_pointer_maps, false, "\x70\x6f\x69\x6e\x74\x65\x72\x20\x6d\x61\x70\x20\x66\x6f\x72\x20\x65\x76\x65\x72\x79\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(stress_environments, false, "\x65\x6e\x76\x69\x72\x6f\x6e\x6d\x65\x6e\x74\x20\x66\x6f\x72\x20\x65\x76\x65\x72\x79\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e")
DEFINE_INT(deopt_every_n_times, 0,
           "\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x65\x76\x65\x72\x79\x20\x6e\x20\x74\x69\x6d\x65\x73\x20\x61\x20\x64\x65\x6f\x70\x74\x20\x70\x6f\x69\x6e\x74\x20\x69\x73\x20\x70\x61\x73\x73\x65\x64")
DEFINE_INT(deopt_every_n_garbage_collections, 0,
           "\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x65\x76\x65\x72\x79\x20\x6e\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(print_deopt_stress, false, "\x70\x72\x69\x6e\x74\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x70\x6f\x73\x73\x69\x62\x6c\x65\x20\x64\x65\x6f\x70\x74\x20\x70\x6f\x69\x6e\x74\x73")
DEFINE_BOOL(trap_on_deopt, false, "\x70\x75\x74\x20\x61\x20\x62\x72\x65\x61\x6b\x20\x70\x6f\x69\x6e\x74\x20\x62\x65\x66\x6f\x72\x65\x20\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x69\x6e\x67")
DEFINE_BOOL(trap_on_stub_deopt, false,
            "\x70\x75\x74\x20\x61\x20\x62\x72\x65\x61\x6b\x20\x70\x6f\x69\x6e\x74\x20\x62\x65\x66\x6f\x72\x65\x20\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x69\x6e\x67\x20\x61\x20\x73\x74\x75\x62")
DEFINE_BOOL(deoptimize_uncommon_cases, true, "\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x75\x6e\x63\x6f\x6d\x6d\x6f\x6e\x20\x63\x61\x73\x65\x73")
DEFINE_BOOL(polymorphic_inlining, true, "\x70\x6f\x6c\x79\x6d\x6f\x72\x70\x68\x69\x63\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67")
DEFINE_BOOL(use_osr, true, "\x75\x73\x65\x20\x6f\x6e\x2d\x73\x74\x61\x63\x6b\x20\x72\x65\x70\x6c\x61\x63\x65\x6d\x65\x6e\x74")
DEFINE_BOOL(array_bounds_checks_elimination, true,
            "\x70\x65\x72\x66\x6f\x72\x6d\x20\x61\x72\x72\x61\x79\x20\x62\x6f\x75\x6e\x64\x73\x20\x63\x68\x65\x63\x6b\x73\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_bce, false, "\x74\x72\x61\x63\x65\x20\x61\x72\x72\x61\x79\x20\x62\x6f\x75\x6e\x64\x73\x20\x63\x68\x65\x63\x6b\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(array_index_dehoisting, true, "\x70\x65\x72\x66\x6f\x72\x6d\x20\x61\x72\x72\x61\x79\x20\x69\x6e\x64\x65\x78\x20\x64\x65\x68\x6f\x69\x73\x74\x69\x6e\x67")
DEFINE_BOOL(analyze_environment_liveness, true,
            "\x61\x6e\x61\x6c\x79\x7a\x65\x20\x6c\x69\x76\x65\x6e\x65\x73\x73\x20\x6f\x66\x20\x65\x6e\x76\x69\x72\x6f\x6e\x6d\x65\x6e\x74\x20\x73\x6c\x6f\x74\x73\x20\x61\x6e\x64\x20\x7a\x61\x70\x20\x64\x65\x61\x64\x20\x76\x61\x6c\x75\x65\x73")
DEFINE_BOOL(load_elimination, true, "\x75\x73\x65\x20\x6c\x6f\x61\x64\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(check_elimination, true, "\x75\x73\x65\x20\x63\x68\x65\x63\x6b\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(store_elimination, false, "\x75\x73\x65\x20\x73\x74\x6f\x72\x65\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(dead_code_elimination, true, "\x75\x73\x65\x20\x64\x65\x61\x64\x20\x63\x6f\x64\x65\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(fold_constants, true, "\x75\x73\x65\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x66\x6f\x6c\x64\x69\x6e\x67")
DEFINE_BOOL(trace_dead_code_elimination, false, "\x74\x72\x61\x63\x65\x20\x64\x65\x61\x64\x20\x63\x6f\x64\x65\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(unreachable_code_elimination, true, "\x65\x6c\x69\x6d\x69\x6e\x61\x74\x65\x20\x75\x6e\x72\x65\x61\x63\x68\x61\x62\x6c\x65\x20\x63\x6f\x64\x65")
DEFINE_BOOL(trace_osr, false, "\x74\x72\x61\x63\x65\x20\x6f\x6e\x2d\x73\x74\x61\x63\x6b\x20\x72\x65\x70\x6c\x61\x63\x65\x6d\x65\x6e\x74")
DEFINE_INT(stress_runs, 0, "\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x73\x74\x72\x65\x73\x73\x20\x72\x75\x6e\x73")
DEFINE_BOOL(lookup_sample_by_shared, true,
            "\x77\x68\x65\x6e\x20\x70\x69\x63\x6b\x69\x6e\x67\x20\x61\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x74\x6f\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x2c\x20\x77\x61\x74\x63\x68\x20\x66\x6f\x72\x20\x73\x68\x61\x72\x65\x64\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20"
            "\x69\x6e\x66\x6f\x2c\x20\x6e\x6f\x74\x20\x4a\x53\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x69\x74\x73\x65\x6c\x66")
DEFINE_BOOL(flush_optimized_code_cache, false,
            "\x66\x6c\x75\x73\x68\x65\x73\x20\x74\x68\x65\x20\x63\x61\x63\x68\x65\x20\x6f\x66\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65\x20\x66\x6f\x72\x20\x63\x6c\x6f\x73\x75\x72\x65\x73\x20\x6f\x6e\x20\x65\x76\x65\x72\x79\x20\x47\x43")
DEFINE_BOOL(inline_construct, true, "\x69\x6e\x6c\x69\x6e\x65\x20\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72\x20\x63\x61\x6c\x6c\x73")
DEFINE_BOOL(inline_arguments, true, "\x69\x6e\x6c\x69\x6e\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73\x20\x77\x69\x74\x68\x20\x61\x72\x67\x75\x6d\x65\x6e\x74\x73\x20\x6f\x62\x6a\x65\x63\x74")
DEFINE_BOOL(inline_accessors, true, "\x69\x6e\x6c\x69\x6e\x65\x20\x4a\x61\x76\x61\x53\x63\x72\x69\x70\x74\x20\x61\x63\x63\x65\x73\x73\x6f\x72\x73")
DEFINE_INT(escape_analysis_iterations, 2,
           "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x65\x73\x63\x61\x70\x65\x20\x61\x6e\x61\x6c\x79\x73\x69\x73\x20\x66\x69\x78\x2d\x70\x6f\x69\x6e\x74\x20\x69\x74\x65\x72\x61\x74\x69\x6f\x6e\x73")

DEFINE_BOOL(concurrent_recompilation, true,
            "\x6f\x70\x74\x69\x6d\x69\x7a\x69\x6e\x67\x20\x68\x6f\x74\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73\x20\x61\x73\x79\x6e\x63\x68\x72\x6f\x6e\x6f\x75\x73\x6c\x79\x20\x6f\x6e\x20\x61\x20\x73\x65\x70\x61\x72\x61\x74\x65\x20\x74\x68\x72\x65\x61\x64")
DEFINE_BOOL(trace_concurrent_recompilation, false,
            "\x74\x72\x61\x63\x6b\x20\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x20\x72\x65\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e")
DEFINE_INT(concurrent_recompilation_queue_length, 8,
           "\x74\x68\x65\x20\x6c\x65\x6e\x67\x74\x68\x20\x6f\x66\x20\x74\x68\x65\x20\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x20\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e\x20\x71\x75\x65\x75\x65")
DEFINE_INT(concurrent_recompilation_delay, 0,
           "\x61\x72\x74\x69\x66\x69\x63\x69\x61\x6c\x20\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e\x20\x64\x65\x6c\x61\x79\x20\x69\x6e\x20\x6d\x73")
DEFINE_BOOL(block_concurrent_recompilation, false,
            "\x62\x6c\x6f\x63\x6b\x20\x71\x75\x65\x75\x65\x64\x20\x6a\x6f\x62\x73\x20\x75\x6e\x74\x69\x6c\x20\x72\x65\x6c\x65\x61\x73\x65\x64")

DEFINE_BOOL(omit_map_checks_for_leaf_maps, true,
            "\x64\x6f\x20\x6e\x6f\x74\x20\x65\x6d\x69\x74\x20\x63\x68\x65\x63\x6b\x20\x6d\x61\x70\x73\x20\x66\x6f\x72\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x76\x61\x6c\x75\x65\x73\x20\x74\x68\x61\x74\x20\x68\x61\x76\x65\x20\x61\x20\x6c\x65\x61\x66\x20\x6d\x61\x70\x2c\x20"
            "\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x74\x68\x65\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65\x20\x69\x66\x20\x74\x68\x65\x20\x6c\x61\x79\x6f\x75\x74\x20\x6f\x66\x20\x74\x68\x65\x20\x6d\x61\x70\x73\x20\x63\x68\x61\x6e\x67\x65\x73\x2e")

// Flags for TurboFan.
DEFINE_BOOL(turbo, false, "\x65\x6e\x61\x62\x6c\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x63\x6f\x6d\x70\x69\x6c\x65\x72")
DEFINE_IMPLICATION(turbo, turbo_asm_deoptimization)
DEFINE_BOOL(turbo_shipping, true, "\x65\x6e\x61\x62\x6c\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x63\x6f\x6d\x70\x69\x6c\x65\x72\x20\x6f\x6e\x20\x73\x75\x62\x73\x65\x74")
DEFINE_BOOL(turbo_greedy_regalloc, false, "\x75\x73\x65\x20\x74\x68\x65\x20\x67\x72\x65\x65\x64\x79\x20\x72\x65\x67\x69\x73\x74\x65\x72\x20\x61\x6c\x6c\x6f\x63\x61\x74\x6f\x72")
DEFINE_BOOL(turbo_sp_frame_access, false,
            "\x75\x73\x65\x20\x73\x74\x61\x63\x6b\x20\x70\x6f\x69\x6e\x74\x65\x72\x2d\x72\x65\x6c\x61\x74\x69\x76\x65\x20\x61\x63\x63\x65\x73\x73\x20\x74\x6f\x20\x66\x72\x61\x6d\x65\x20\x77\x68\x65\x72\x65\x76\x65\x72\x20\x70\x6f\x73\x73\x69\x62\x6c\x65")
DEFINE_BOOL(turbo_preprocess_ranges, true,
            "\x72\x75\x6e\x20\x70\x72\x65\x2d\x72\x65\x67\x69\x73\x74\x65\x72\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x68\x65\x75\x72\x69\x73\x74\x69\x63\x73")
DEFINE_BOOL(turbo_loop_stackcheck, true, "\x65\x6e\x61\x62\x6c\x65\x20\x73\x74\x61\x63\x6b\x20\x63\x68\x65\x63\x6b\x73\x20\x69\x6e\x20\x6c\x6f\x6f\x70\x73")
DEFINE_STRING(turbo_filter, "\x7e\x7e", "\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x66\x69\x6c\x74\x65\x72\x20\x66\x6f\x72\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x63\x6f\x6d\x70\x69\x6c\x65\x72")
DEFINE_BOOL(trace_turbo, false, "\x74\x72\x61\x63\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x49\x52")
DEFINE_BOOL(trace_turbo_graph, false, "\x74\x72\x61\x63\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x67\x72\x61\x70\x68\x73")
DEFINE_IMPLICATION(trace_turbo_graph, trace_turbo)
DEFINE_STRING(trace_turbo_cfg_file, NULL,
              "\x74\x72\x61\x63\x65\x20\x74\x75\x72\x62\x6f\x20\x63\x66\x67\x20\x67\x72\x61\x70\x68\x20\x28\x66\x6f\x72\x20\x43\x31\x20\x76\x69\x73\x75\x61\x6c\x69\x7a\x65\x72\x29\x20\x74\x6f\x20\x61\x20\x67\x69\x76\x65\x6e\x20\x66\x69\x6c\x65\x20\x6e\x61\x6d\x65")
DEFINE_BOOL(trace_turbo_types, true, "\x74\x72\x61\x63\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x27\x73\x20\x74\x79\x70\x65\x73")
DEFINE_BOOL(trace_turbo_scheduler, false, "\x74\x72\x61\x63\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x27\x73\x20\x73\x63\x68\x65\x64\x75\x6c\x65\x72")
DEFINE_BOOL(trace_turbo_reduction, false, "\x74\x72\x61\x63\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x27\x73\x20\x76\x61\x72\x69\x6f\x75\x73\x20\x72\x65\x64\x75\x63\x65\x72\x73")
DEFINE_BOOL(trace_turbo_jt, false, "\x74\x72\x61\x63\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x27\x73\x20\x6a\x75\x6d\x70\x20\x74\x68\x72\x65\x61\x64\x69\x6e\x67")
DEFINE_BOOL(trace_turbo_ceq, false, "\x74\x72\x61\x63\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x27\x73\x20\x63\x6f\x6e\x74\x72\x6f\x6c\x20\x65\x71\x75\x69\x76\x61\x6c\x65\x6e\x63\x65")
DEFINE_BOOL(turbo_asm, true, "\x65\x6e\x61\x62\x6c\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x66\x6f\x72\x20\x61\x73\x6d\x2e\x6a\x73\x20\x63\x6f\x64\x65")
DEFINE_BOOL(turbo_asm_deoptimization, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x66\x6f\x72\x20\x61\x73\x6d\x2e\x6a\x73\x20\x63\x6f\x64\x65")
DEFINE_BOOL(turbo_verify, DEBUG_BOOL, "\x76\x65\x72\x69\x66\x79\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x67\x72\x61\x70\x68\x73\x20\x61\x74\x20\x65\x61\x63\x68\x20\x70\x68\x61\x73\x65")
DEFINE_BOOL(turbo_stats, false, "\x70\x72\x69\x6e\x74\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73")
DEFINE_BOOL(turbo_splitting, true, "\x73\x70\x6c\x69\x74\x20\x6e\x6f\x64\x65\x73\x20\x64\x75\x72\x69\x6e\x67\x20\x73\x63\x68\x65\x64\x75\x6c\x69\x6e\x67\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_types, true, "\x75\x73\x65\x20\x74\x79\x70\x65\x64\x20\x6c\x6f\x77\x65\x72\x69\x6e\x67\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_source_positions, false,
            "\x74\x72\x61\x63\x6b\x20\x73\x6f\x75\x72\x63\x65\x20\x63\x6f\x64\x65\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x73\x20\x77\x68\x65\x6e\x20\x62\x75\x69\x6c\x64\x69\x6e\x67\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x49\x52")
DEFINE_IMPLICATION(trace_turbo, turbo_source_positions)
DEFINE_BOOL(function_context_specialization, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x63\x6f\x6e\x74\x65\x78\x74\x20\x73\x70\x65\x63\x69\x61\x6c\x69\x7a\x61\x74\x69\x6f\x6e\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(native_context_specialization, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x6e\x61\x74\x69\x76\x65\x20\x63\x6f\x6e\x74\x65\x78\x74\x20\x73\x70\x65\x63\x69\x61\x6c\x69\x7a\x61\x74\x69\x6f\x6e\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_inlining, true, "\x65\x6e\x61\x62\x6c\x65\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(trace_turbo_inlining, false, "\x74\x72\x61\x63\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x69\x6e\x6c\x69\x6e\x69\x6e\x67")
DEFINE_BOOL(loop_assignment_analysis, true, "\x70\x65\x72\x66\x6f\x72\x6d\x20\x6c\x6f\x6f\x70\x20\x61\x73\x73\x69\x67\x6e\x6d\x65\x6e\x74\x20\x61\x6e\x61\x6c\x79\x73\x69\x73")
DEFINE_BOOL(turbo_profiling, false, "\x65\x6e\x61\x62\x6c\x65\x20\x70\x72\x6f\x66\x69\x6c\x69\x6e\x67\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_verify_allocation, DEBUG_BOOL,
            "\x76\x65\x72\x69\x66\x79\x20\x72\x65\x67\x69\x73\x74\x65\x72\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_move_optimization, true, "\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x67\x61\x70\x20\x6d\x6f\x76\x65\x73\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_jt, true, "\x65\x6e\x61\x62\x6c\x65\x20\x6a\x75\x6d\x70\x20\x74\x68\x72\x65\x61\x64\x69\x6e\x67\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_osr, true, "\x65\x6e\x61\x62\x6c\x65\x20\x4f\x53\x52\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_stress_loop_peeling, false,
            "\x73\x74\x72\x65\x73\x73\x20\x6c\x6f\x6f\x70\x20\x70\x65\x65\x6c\x69\x6e\x67\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(turbo_cf_optimization, true, "\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x63\x6f\x6e\x74\x72\x6f\x6c\x20\x66\x6c\x6f\x77\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_frame_elision, true, "\x65\x6c\x69\x64\x65\x20\x66\x72\x61\x6d\x65\x73\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_cache_shared_code, true, "\x63\x61\x63\x68\x65\x20\x63\x6f\x6e\x74\x65\x78\x74\x2d\x69\x6e\x64\x65\x70\x65\x6e\x64\x65\x6e\x74\x20\x63\x6f\x64\x65")
DEFINE_BOOL(turbo_preserve_shared_code, false, "\x6b\x65\x65\x70\x20\x63\x6f\x6e\x74\x65\x78\x74\x2d\x69\x6e\x64\x65\x70\x65\x6e\x64\x65\x6e\x74\x20\x63\x6f\x64\x65")
DEFINE_BOOL(turbo_escape, false, "\x65\x6e\x61\x62\x6c\x65\x20\x65\x73\x63\x61\x70\x65\x20\x61\x6e\x61\x6c\x79\x73\x69\x73")
DEFINE_BOOL(turbo_instruction_scheduling, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x73\x63\x68\x65\x64\x75\x6c\x69\x6e\x67\x20\x69\x6e\x20\x54\x75\x72\x62\x6f\x46\x61\x6e")
DEFINE_BOOL(turbo_stress_instruction_scheduling, false,
            "\x72\x61\x6e\x64\x6f\x6d\x6c\x79\x20\x73\x63\x68\x65\x64\x75\x6c\x65\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x74\x6f\x20\x73\x74\x72\x65\x73\x73\x20\x64\x65\x70\x65\x6e\x64\x65\x6e\x63\x79\x20\x74\x72\x61\x63\x6b\x69\x6e\x67")

// Flags for native WebAssembly.
DEFINE_BOOL(expose_wasm, false, "\x65\x78\x70\x6f\x73\x65\x20\x57\x41\x53\x4d\x20\x69\x6e\x74\x65\x72\x66\x61\x63\x65\x20\x74\x6f\x20\x4a\x61\x76\x61\x53\x63\x72\x69\x70\x74")
DEFINE_BOOL(trace_wasm_encoder, false, "\x74\x72\x61\x63\x65\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x20\x6f\x66\x20\x77\x61\x73\x6d\x20\x63\x6f\x64\x65")
DEFINE_BOOL(trace_wasm_decoder, false, "\x74\x72\x61\x63\x65\x20\x64\x65\x63\x6f\x64\x69\x6e\x67\x20\x6f\x66\x20\x77\x61\x73\x6d\x20\x63\x6f\x64\x65")
DEFINE_BOOL(trace_wasm_decode_time, false, "\x74\x72\x61\x63\x65\x20\x64\x65\x63\x6f\x64\x69\x6e\x67\x20\x74\x69\x6d\x65\x20\x6f\x66\x20\x77\x61\x73\x6d\x20\x63\x6f\x64\x65")
DEFINE_BOOL(trace_wasm_compiler, false, "\x74\x72\x61\x63\x65\x20\x63\x6f\x6d\x70\x69\x6c\x69\x6e\x67\x20\x6f\x66\x20\x77\x61\x73\x6d\x20\x63\x6f\x64\x65")
DEFINE_INT(trace_wasm_ast_start, 0,
           "\x73\x74\x61\x72\x74\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x57\x41\x53\x4d\x20\x41\x53\x54\x20\x74\x72\x61\x63\x65\x20\x28\x69\x6e\x63\x6c\x75\x73\x69\x76\x65\x29")
DEFINE_INT(trace_wasm_ast_end, 0, "\x65\x6e\x64\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x57\x41\x53\x4d\x20\x41\x53\x54\x20\x74\x72\x61\x63\x65\x20\x28\x65\x78\x63\x6c\x75\x73\x69\x76\x65\x29")
DEFINE_INT(skip_compiling_wasm_funcs, 0, "\x73\x74\x61\x72\x74\x20\x63\x6f\x6d\x70\x69\x6c\x69\x6e\x67\x20\x61\x74\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x4e")
DEFINE_BOOL(wasm_break_on_decoder_error, false,
            "\x64\x65\x62\x75\x67\x20\x62\x72\x65\x61\x6b\x20\x77\x68\x65\x6e\x20\x77\x61\x73\x6d\x20\x64\x65\x63\x6f\x64\x65\x72\x20\x65\x6e\x63\x6f\x75\x6e\x74\x65\x72\x73\x20\x61\x6e\x20\x65\x72\x72\x6f\x72")
DEFINE_BOOL(wasm_loop_assignment_analysis, true,
            "\x70\x65\x72\x66\x6f\x72\x6d\x20\x6c\x6f\x6f\x70\x20\x61\x73\x73\x69\x67\x6e\x6d\x65\x6e\x74\x20\x61\x6e\x61\x6c\x79\x73\x69\x73\x20\x66\x6f\x72\x20\x57\x41\x53\x4d")

DEFINE_BOOL(enable_simd_asmjs, false, "\x65\x6e\x61\x62\x6c\x65\x20\x53\x49\x4d\x44\x2e\x6a\x73\x20\x69\x6e\x20\x61\x73\x6d\x2e\x6a\x73\x20\x73\x74\x64\x6c\x69\x62")

DEFINE_BOOL(dump_wasm_module, false, "\x64\x75\x6d\x70\x20\x57\x41\x53\x4d\x20\x6d\x6f\x64\x75\x6c\x65\x20\x62\x79\x74\x65\x73")
DEFINE_STRING(dump_wasm_module_path, NULL, "\x64\x69\x72\x65\x63\x74\x6f\x72\x79\x20\x74\x6f\x20\x64\x75\x6d\x70\x20\x77\x61\x73\x6d\x20\x6d\x6f\x64\x75\x6c\x65\x73\x20\x74\x6f")

DEFINE_INT(typed_array_max_size_in_heap, 64,
           "\x74\x68\x72\x65\x73\x68\x6f\x6c\x64\x20\x66\x6f\x72\x20\x69\x6e\x2d\x68\x65\x61\x70\x20\x74\x79\x70\x65\x64\x20\x61\x72\x72\x61\x79")

// Profiler flags.
DEFINE_INT(frame_count, 1, "\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x73\x74\x61\x63\x6b\x20\x66\x72\x61\x6d\x65\x73\x20\x69\x6e\x73\x70\x65\x63\x74\x65\x64\x20\x62\x79\x20\x74\x68\x65\x20\x70\x72\x6f\x66\x69\x6c\x65\x72")
// 0x1800 fits in the immediate field of an ARM instruction.
DEFINE_INT(interrupt_budget, 0x1800,
           "\x65\x78\x65\x63\x75\x74\x69\x6f\x6e\x20\x62\x75\x64\x67\x65\x74\x20\x62\x65\x66\x6f\x72\x65\x20\x69\x6e\x74\x65\x72\x72\x75\x70\x74\x20\x69\x73\x20\x74\x72\x69\x67\x67\x65\x72\x65\x64")
DEFINE_INT(type_info_threshold, 25,
           "\x70\x65\x72\x63\x65\x6e\x74\x61\x67\x65\x20\x6f\x66\x20\x49\x43\x73\x20\x74\x68\x61\x74\x20\x6d\x75\x73\x74\x20\x68\x61\x76\x65\x20\x74\x79\x70\x65\x20\x69\x6e\x66\x6f\x20\x74\x6f\x20\x61\x6c\x6c\x6f\x77\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e")
DEFINE_INT(generic_ic_threshold, 30,
           "\x6d\x61\x78\x20\x70\x65\x72\x63\x65\x6e\x74\x61\x67\x65\x20\x6f\x66\x20\x6d\x65\x67\x61\x6d\x6f\x72\x70\x68\x69\x63\x2f\x67\x65\x6e\x65\x72\x69\x63\x20\x49\x43\x73\x20\x74\x6f\x20\x61\x6c\x6c\x6f\x77\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e")
DEFINE_INT(self_opt_count, 130, "\x63\x61\x6c\x6c\x20\x63\x6f\x75\x6e\x74\x20\x62\x65\x66\x6f\x72\x65\x20\x73\x65\x6c\x66\x2d\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e")

DEFINE_BOOL(trace_opt_verbose, false, "\x65\x78\x74\x72\x61\x20\x76\x65\x72\x62\x6f\x73\x65\x20\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e\x20\x74\x72\x61\x63\x69\x6e\x67")
DEFINE_IMPLICATION(trace_opt_verbose, trace_opt)

// assembler-ia32.cc / assembler-arm.cc / assembler-x64.cc
DEFINE_BOOL(debug_code, false, "\x67\x65\x6e\x65\x72\x61\x74\x65\x20\x65\x78\x74\x72\x61\x20\x63\x6f\x64\x65\x20\x28\x61\x73\x73\x65\x72\x74\x69\x6f\x6e\x73\x29\x20\x66\x6f\x72\x20\x64\x65\x62\x75\x67\x67\x69\x6e\x67")
DEFINE_BOOL(code_comments, false, "\x65\x6d\x69\x74\x20\x63\x6f\x6d\x6d\x65\x6e\x74\x73\x20\x69\x6e\x20\x63\x6f\x64\x65\x20\x64\x69\x73\x61\x73\x73\x65\x6d\x62\x6c\x79")
DEFINE_BOOL(enable_sse3, true, "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x53\x53\x45\x33\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_sse4_1, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x53\x53\x45\x34\x2e\x31\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_sahf, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x53\x41\x48\x46\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x28\x58\x36\x34\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_avx, true, "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x41\x56\x58\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_fma3, true, "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x46\x4d\x41\x33\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_bmi1, true, "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x42\x4d\x49\x31\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_bmi2, true, "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x42\x4d\x49\x32\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_lzcnt, true, "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x4c\x5a\x43\x4e\x54\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_popcnt, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x50\x4f\x50\x43\x4e\x54\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_vfp3, ENABLE_VFP3_DEFAULT,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x56\x46\x50\x33\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65")
DEFINE_BOOL(enable_armv7, ENABLE_ARMV7_DEFAULT,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x41\x52\x4d\x76\x37\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_armv8, ENABLE_ARMV8_DEFAULT,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x41\x52\x4d\x76\x38\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x28\x41\x52\x4d\x20\x33\x32\x2d\x62\x69\x74\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_neon, ENABLE_NEON_DEFAULT,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x4e\x45\x4f\x4e\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_sudiv, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x53\x44\x49\x56\x20\x61\x6e\x64\x20\x55\x44\x49\x56\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_mls, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x4d\x4c\x53\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73\x20\x69\x66\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_movw_movt, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x6c\x6f\x61\x64\x69\x6e\x67\x20\x33\x32\x2d\x62\x69\x74\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x62\x79\x20\x6d\x65\x61\x6e\x73\x20\x6f\x66\x20\x6d\x6f\x76\x77\x2f\x6d\x6f\x76\x74\x20"
            "\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x70\x61\x69\x72\x73\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_unaligned_accesses, true,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x6e\x61\x6c\x69\x67\x6e\x65\x64\x20\x61\x63\x63\x65\x73\x73\x65\x73\x20\x66\x6f\x72\x20\x41\x52\x4d\x76\x37\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(enable_32dregs, ENABLE_32DREGS_DEFAULT,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x64\x31\x36\x2d\x64\x33\x31\x20\x72\x65\x67\x69\x73\x74\x65\x72\x73\x20\x6f\x6e\x20\x41\x52\x4d\x20\x2d\x20\x74\x68\x69\x73\x20\x72\x65\x71\x75\x69\x72\x65\x73\x20\x56\x46\x50\x33")
DEFINE_BOOL(enable_vldr_imm, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x70\x6f\x6f\x6c\x73\x20\x66\x6f\x72\x20\x64\x6f\x75\x62\x6c\x65\x20\x69\x6d\x6d\x65\x64\x69\x61\x74\x65\x20\x28\x41\x52\x4d\x20\x6f\x6e\x6c\x79\x29")
DEFINE_BOOL(force_long_branches, false,
            "\x66\x6f\x72\x63\x65\x20\x61\x6c\x6c\x20\x65\x6d\x69\x74\x74\x65\x64\x20\x62\x72\x61\x6e\x63\x68\x65\x73\x20\x74\x6f\x20\x62\x65\x20\x69\x6e\x20\x6c\x6f\x6e\x67\x20\x6d\x6f\x64\x65\x20\x28\x4d\x49\x50\x53\x2f\x50\x50\x43\x20\x6f\x6e\x6c\x79\x29")
DEFINE_STRING(mcpu, "\x61\x75\x74\x6f", "\x65\x6e\x61\x62\x6c\x65\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x73\x70\x65\x63\x69\x66\x69\x63\x20\x63\x70\x75")

DEFINE_IMPLICATION(enable_armv8, enable_vfp3)
DEFINE_IMPLICATION(enable_armv8, enable_neon)
DEFINE_IMPLICATION(enable_armv8, enable_32dregs)
DEFINE_IMPLICATION(enable_armv8, enable_sudiv)
DEFINE_IMPLICATION(enable_armv8, enable_mls)

// bootstrapper.cc
DEFINE_STRING(expose_natives_as, NULL, "\x65\x78\x70\x6f\x73\x65\x20\x6e\x61\x74\x69\x76\x65\x73\x20\x69\x6e\x20\x67\x6c\x6f\x62\x61\x6c\x20\x6f\x62\x6a\x65\x63\x74")
DEFINE_STRING(expose_debug_as, NULL, "\x65\x78\x70\x6f\x73\x65\x20\x64\x65\x62\x75\x67\x20\x69\x6e\x20\x67\x6c\x6f\x62\x61\x6c\x20\x6f\x62\x6a\x65\x63\x74")
DEFINE_BOOL(expose_free_buffer, false, "\x65\x78\x70\x6f\x73\x65\x20\x66\x72\x65\x65\x42\x75\x66\x66\x65\x72\x20\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e")
DEFINE_BOOL(expose_gc, false, "\x65\x78\x70\x6f\x73\x65\x20\x67\x63\x20\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e")
DEFINE_STRING(expose_gc_as, NULL,
              "\x65\x78\x70\x6f\x73\x65\x20\x67\x63\x20\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x20\x75\x6e\x64\x65\x72\x20\x74\x68\x65\x20\x73\x70\x65\x63\x69\x66\x69\x65\x64\x20\x6e\x61\x6d\x65")
DEFINE_IMPLICATION(expose_gc_as, expose_gc)
DEFINE_BOOL(expose_externalize_string, false,
            "\x65\x78\x70\x6f\x73\x65\x20\x65\x78\x74\x65\x72\x6e\x61\x6c\x69\x7a\x65\x20\x73\x74\x72\x69\x6e\x67\x20\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e")
DEFINE_BOOL(expose_trigger_failure, false, "\x65\x78\x70\x6f\x73\x65\x20\x74\x72\x69\x67\x67\x65\x72\x2d\x66\x61\x69\x6c\x75\x72\x65\x20\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e")
DEFINE_INT(stack_trace_limit, 10, "\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x73\x74\x61\x63\x6b\x20\x66\x72\x61\x6d\x65\x73\x20\x74\x6f\x20\x63\x61\x70\x74\x75\x72\x65")
DEFINE_BOOL(builtins_in_stack_traces, false,
            "\x73\x68\x6f\x77\x20\x62\x75\x69\x6c\x74\x2d\x69\x6e\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73\x20\x69\x6e\x20\x73\x74\x61\x63\x6b\x20\x74\x72\x61\x63\x65\x73")
DEFINE_BOOL(disable_native_files, false, "\x64\x69\x73\x61\x62\x6c\x65\x20\x62\x75\x69\x6c\x74\x69\x6e\x20\x6e\x61\x74\x69\x76\x65\x73\x20\x66\x69\x6c\x65\x73")

// builtins-ia32.cc
DEFINE_BOOL(inline_new, true, "\x75\x73\x65\x20\x66\x61\x73\x74\x20\x69\x6e\x6c\x69\x6e\x65\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e")

// codegen-ia32.cc / codegen-arm.cc
DEFINE_BOOL(trace_codegen, false,
            "\x70\x72\x69\x6e\x74\x20\x6e\x61\x6d\x65\x20\x6f\x66\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73\x20\x66\x6f\x72\x20\x77\x68\x69\x63\x68\x20\x63\x6f\x64\x65\x20\x69\x73\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64")
DEFINE_BOOL(trace, false, "\x74\x72\x61\x63\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x63\x61\x6c\x6c\x73")
DEFINE_BOOL(mask_constants_with_cookie, true,
            "\x75\x73\x65\x20\x72\x61\x6e\x64\x6f\x6d\x20\x6a\x69\x74\x20\x63\x6f\x6f\x6b\x69\x65\x20\x74\x6f\x20\x6d\x61\x73\x6b\x20\x6c\x61\x72\x67\x65\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x73")

// codegen.cc
DEFINE_BOOL(lazy, true, "\x75\x73\x65\x20\x6c\x61\x7a\x79\x20\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_opt, false, "\x74\x72\x61\x63\x65\x20\x6c\x61\x7a\x79\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_opt_stats, false, "\x74\x72\x61\x63\x65\x20\x6c\x61\x7a\x79\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73")
DEFINE_BOOL(opt, true, "\x75\x73\x65\x20\x61\x64\x61\x70\x74\x69\x76\x65\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(always_opt, false, "\x61\x6c\x77\x61\x79\x73\x20\x74\x72\x79\x20\x74\x6f\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(always_osr, false, "\x61\x6c\x77\x61\x79\x73\x20\x74\x72\x79\x20\x74\x6f\x20\x4f\x53\x52\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(prepare_always_opt, false, "\x70\x72\x65\x70\x61\x72\x65\x20\x66\x6f\x72\x20\x74\x75\x72\x6e\x69\x6e\x67\x20\x6f\x6e\x20\x61\x6c\x77\x61\x79\x73\x20\x6f\x70\x74")
DEFINE_BOOL(trace_deopt, false, "\x74\x72\x61\x63\x65\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_stub_failures, false,
            "\x74\x72\x61\x63\x65\x20\x64\x65\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x6f\x66\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x63\x6f\x64\x65\x20\x73\x74\x75\x62\x73")

DEFINE_BOOL(serialize_toplevel, true, "\x65\x6e\x61\x62\x6c\x65\x20\x63\x61\x63\x68\x69\x6e\x67\x20\x6f\x66\x20\x74\x6f\x70\x6c\x65\x76\x65\x6c\x20\x73\x63\x72\x69\x70\x74\x73")
DEFINE_BOOL(serialize_eager, false, "\x63\x6f\x6d\x70\x69\x6c\x65\x20\x65\x61\x67\x65\x72\x6c\x79\x20\x77\x68\x65\x6e\x20\x63\x61\x63\x68\x69\x6e\x67\x20\x73\x63\x72\x69\x70\x74\x73")
DEFINE_BOOL(serialize_age_code, false, "\x70\x72\x65\x20\x61\x67\x65\x20\x63\x6f\x64\x65\x20\x69\x6e\x20\x74\x68\x65\x20\x63\x6f\x64\x65\x20\x63\x61\x63\x68\x65")
DEFINE_BOOL(trace_serializer, false, "\x70\x72\x69\x6e\x74\x20\x63\x6f\x64\x65\x20\x73\x65\x72\x69\x61\x6c\x69\x7a\x65\x72\x20\x74\x72\x61\x63\x65")

// compiler.cc
DEFINE_INT(min_preparse_length, 1024,
           "\x6d\x69\x6e\x69\x6d\x75\x6d\x20\x6c\x65\x6e\x67\x74\x68\x20\x66\x6f\x72\x20\x61\x75\x74\x6f\x6d\x61\x74\x69\x63\x20\x65\x6e\x61\x62\x6c\x65\x20\x70\x72\x65\x70\x61\x72\x73\x69\x6e\x67")
DEFINE_INT(max_opt_count, 10,
           "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x6f\x70\x74\x69\x6d\x69\x7a\x61\x74\x69\x6f\x6e\x20\x61\x74\x74\x65\x6d\x70\x74\x73\x20\x62\x65\x66\x6f\x72\x65\x20\x67\x69\x76\x69\x6e\x67\x20\x75\x70\x2e")

// compilation-cache.cc
DEFINE_BOOL(compilation_cache, true, "\x65\x6e\x61\x62\x6c\x65\x20\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e\x20\x63\x61\x63\x68\x65")

DEFINE_BOOL(cache_prototype_transitions, true, "\x63\x61\x63\x68\x65\x20\x70\x72\x6f\x74\x6f\x74\x79\x70\x65\x20\x74\x72\x61\x6e\x73\x69\x74\x69\x6f\x6e\x73")

// cpu-profiler.cc
DEFINE_INT(cpu_profiler_sampling_interval, 1000,
           "\x43\x50\x55\x20\x70\x72\x6f\x66\x69\x6c\x65\x72\x20\x73\x61\x6d\x70\x6c\x69\x6e\x67\x20\x69\x6e\x74\x65\x72\x76\x61\x6c\x20\x69\x6e\x20\x6d\x69\x63\x72\x6f\x73\x65\x63\x6f\x6e\x64\x73")

// Array abuse tracing
DEFINE_BOOL(trace_js_array_abuse, false,
            "\x74\x72\x61\x63\x65\x20\x6f\x75\x74\x2d\x6f\x66\x2d\x62\x6f\x75\x6e\x64\x73\x20\x61\x63\x63\x65\x73\x73\x65\x73\x20\x74\x6f\x20\x4a\x53\x20\x61\x72\x72\x61\x79\x73")
DEFINE_BOOL(trace_external_array_abuse, false,
            "\x74\x72\x61\x63\x65\x20\x6f\x75\x74\x2d\x6f\x66\x2d\x62\x6f\x75\x6e\x64\x73\x2d\x61\x63\x63\x65\x73\x73\x65\x73\x20\x74\x6f\x20\x65\x78\x74\x65\x72\x6e\x61\x6c\x20\x61\x72\x72\x61\x79\x73")
DEFINE_BOOL(trace_array_abuse, false,
            "\x74\x72\x61\x63\x65\x20\x6f\x75\x74\x2d\x6f\x66\x2d\x62\x6f\x75\x6e\x64\x73\x20\x61\x63\x63\x65\x73\x73\x65\x73\x20\x74\x6f\x20\x61\x6c\x6c\x20\x61\x72\x72\x61\x79\x73")
DEFINE_IMPLICATION(trace_array_abuse, trace_js_array_abuse)
DEFINE_IMPLICATION(trace_array_abuse, trace_external_array_abuse)

// debugger
DEFINE_BOOL(trace_debug_json, false, "\x74\x72\x61\x63\x65\x20\x64\x65\x62\x75\x67\x67\x69\x6e\x67\x20\x4a\x53\x4f\x4e\x20\x72\x65\x71\x75\x65\x73\x74\x2f\x72\x65\x73\x70\x6f\x6e\x73\x65")
DEFINE_BOOL(enable_liveedit, true, "\x65\x6e\x61\x62\x6c\x65\x20\x6c\x69\x76\x65\x65\x64\x69\x74\x20\x65\x78\x70\x65\x72\x69\x6d\x65\x6e\x74\x61\x6c\x20\x66\x65\x61\x74\x75\x72\x65")
DEFINE_BOOL(hard_abort, true, "\x61\x62\x6f\x72\x74\x20\x62\x79\x20\x63\x72\x61\x73\x68\x69\x6e\x67")

// execution.cc
DEFINE_INT(stack_size, V8_DEFAULT_STACK_SIZE_KB,
           "\x64\x65\x66\x61\x75\x6c\x74\x20\x73\x69\x7a\x65\x20\x6f\x66\x20\x73\x74\x61\x63\x6b\x20\x72\x65\x67\x69\x6f\x6e\x20\x76\x38\x20\x69\x73\x20\x61\x6c\x6c\x6f\x77\x65\x64\x20\x74\x6f\x20\x75\x73\x65\x20\x28\x69\x6e\x20\x6b\x42\x79\x74\x65\x73\x29")

// frames.cc
DEFINE_INT(max_stack_trace_source_length, 300,
           "\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6c\x65\x6e\x67\x74\x68\x20\x6f\x66\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x73\x6f\x75\x72\x63\x65\x20\x63\x6f\x64\x65\x20\x70\x72\x69\x6e\x74\x65\x64\x20\x69\x6e\x20\x61\x20\x73\x74\x61\x63\x6b\x20\x74\x72\x61\x63\x65\x2e")

// full-codegen.cc
DEFINE_BOOL(always_inline_smi_code, false,
            "\x61\x6c\x77\x61\x79\x73\x20\x69\x6e\x6c\x69\x6e\x65\x20\x73\x6d\x69\x20\x63\x6f\x64\x65\x20\x69\x6e\x20\x6e\x6f\x6e\x2d\x6f\x70\x74\x20\x63\x6f\x64\x65")
DEFINE_BOOL(verify_operand_stack_depth, false,
            "\x65\x6d\x69\x74\x20\x64\x65\x62\x75\x67\x20\x63\x6f\x64\x65\x20\x74\x68\x61\x74\x20\x76\x65\x72\x69\x66\x69\x65\x73\x20\x74\x68\x65\x20\x73\x74\x61\x74\x69\x63\x20\x74\x72\x61\x63\x6b\x69\x6e\x67\x20\x6f\x66\x20\x74\x68\x65\x20\x6f\x70\x65\x72\x61\x6e\x64\x20"
            "\x73\x74\x61\x63\x6b\x20\x64\x65\x70\x74\x68")

// heap.cc
DEFINE_INT(min_semi_space_size, 0,
           "\x6d\x69\x6e\x20\x73\x69\x7a\x65\x20\x6f\x66\x20\x61\x20\x73\x65\x6d\x69\x2d\x73\x70\x61\x63\x65\x20\x28\x69\x6e\x20\x4d\x42\x79\x74\x65\x73\x29\x2c\x20\x74\x68\x65\x20\x6e\x65\x77\x20\x73\x70\x61\x63\x65\x20\x63\x6f\x6e\x73\x69\x73\x74\x73\x20\x6f\x66\x20\x74\x77\x6f"
           "\x73\x65\x6d\x69\x2d\x73\x70\x61\x63\x65\x73")
DEFINE_INT(max_semi_space_size, 0,
           "\x6d\x61\x78\x20\x73\x69\x7a\x65\x20\x6f\x66\x20\x61\x20\x73\x65\x6d\x69\x2d\x73\x70\x61\x63\x65\x20\x28\x69\x6e\x20\x4d\x42\x79\x74\x65\x73\x29\x2c\x20\x74\x68\x65\x20\x6e\x65\x77\x20\x73\x70\x61\x63\x65\x20\x63\x6f\x6e\x73\x69\x73\x74\x73\x20\x6f\x66\x20\x74\x77\x6f"
           "\x73\x65\x6d\x69\x2d\x73\x70\x61\x63\x65\x73")
DEFINE_INT(semi_space_growth_factor, 2, "\x66\x61\x63\x74\x6f\x72\x20\x62\x79\x20\x77\x68\x69\x63\x68\x20\x74\x6f\x20\x67\x72\x6f\x77\x20\x74\x68\x65\x20\x6e\x65\x77\x20\x73\x70\x61\x63\x65")
DEFINE_BOOL(experimental_new_space_growth_heuristic, false,
            "\x47\x72\x6f\x77\x20\x74\x68\x65\x20\x6e\x65\x77\x20\x73\x70\x61\x63\x65\x20\x62\x61\x73\x65\x64\x20\x6f\x6e\x20\x74\x68\x65\x20\x70\x65\x72\x63\x65\x6e\x74\x61\x67\x65\x20\x6f\x66\x20\x73\x75\x72\x76\x69\x76\x6f\x72\x73\x20\x69\x6e\x73\x74\x65\x61\x64\x20"
            "\x6f\x66\x20\x74\x68\x65\x69\x72\x20\x61\x62\x73\x6f\x6c\x75\x74\x65\x20\x76\x61\x6c\x75\x65\x2e")
DEFINE_INT(max_old_space_size, 0, "\x6d\x61\x78\x20\x73\x69\x7a\x65\x20\x6f\x66\x20\x74\x68\x65\x20\x6f\x6c\x64\x20\x73\x70\x61\x63\x65\x20\x28\x69\x6e\x20\x4d\x62\x79\x74\x65\x73\x29")
DEFINE_INT(initial_old_space_size, 0, "\x69\x6e\x69\x74\x69\x61\x6c\x20\x6f\x6c\x64\x20\x73\x70\x61\x63\x65\x20\x73\x69\x7a\x65\x20\x28\x69\x6e\x20\x4d\x62\x79\x74\x65\x73\x29")
DEFINE_INT(max_executable_size, 0, "\x6d\x61\x78\x20\x73\x69\x7a\x65\x20\x6f\x66\x20\x65\x78\x65\x63\x75\x74\x61\x62\x6c\x65\x20\x6d\x65\x6d\x6f\x72\x79\x20\x28\x69\x6e\x20\x4d\x62\x79\x74\x65\x73\x29")
DEFINE_BOOL(gc_global, false, "\x61\x6c\x77\x61\x79\x73\x20\x70\x65\x72\x66\x6f\x72\x6d\x20\x67\x6c\x6f\x62\x61\x6c\x20\x47\x43\x73")
DEFINE_INT(gc_interval, -1, "\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x20\x61\x66\x74\x65\x72\x20\x3c\x6e\x3e\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x73")
DEFINE_INT(retain_maps_for_n_gc, 2,
           "\x6b\x65\x65\x70\x73\x20\x6d\x61\x70\x73\x20\x61\x6c\x69\x76\x65\x20\x66\x6f\x72\x20\x3c\x6e\x3e\x20\x6f\x6c\x64\x20\x73\x70\x61\x63\x65\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(trace_gc, false,
            "\x70\x72\x69\x6e\x74\x20\x6f\x6e\x65\x20\x74\x72\x61\x63\x65\x20\x6c\x69\x6e\x65\x20\x66\x6f\x6c\x6c\x6f\x77\x69\x6e\x67\x20\x65\x61\x63\x68\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_gc_nvp, false,
            "\x70\x72\x69\x6e\x74\x20\x6f\x6e\x65\x20\x64\x65\x74\x61\x69\x6c\x65\x64\x20\x74\x72\x61\x63\x65\x20\x6c\x69\x6e\x65\x20\x69\x6e\x20\x6e\x61\x6d\x65\x3d\x76\x61\x6c\x75\x65\x20\x66\x6f\x72\x6d\x61\x74\x20"
            "\x61\x66\x74\x65\x72\x20\x65\x61\x63\x68\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_gc_ignore_scavenger, false,
            "\x64\x6f\x20\x6e\x6f\x74\x20\x70\x72\x69\x6e\x74\x20\x74\x72\x61\x63\x65\x20\x6c\x69\x6e\x65\x20\x61\x66\x74\x65\x72\x20\x73\x63\x61\x76\x65\x6e\x67\x65\x72\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_idle_notification, false,
            "\x70\x72\x69\x6e\x74\x20\x6f\x6e\x65\x20\x74\x72\x61\x63\x65\x20\x6c\x69\x6e\x65\x20\x66\x6f\x6c\x6c\x6f\x77\x69\x6e\x67\x20\x65\x61\x63\x68\x20\x69\x64\x6c\x65\x20\x6e\x6f\x74\x69\x66\x69\x63\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_idle_notification_verbose, false,
            "\x70\x72\x69\x6e\x74\x73\x20\x74\x68\x65\x20\x68\x65\x61\x70\x20\x73\x74\x61\x74\x65\x20\x75\x73\x65\x64\x20\x62\x79\x20\x74\x68\x65\x20\x69\x64\x6c\x65\x20\x6e\x6f\x74\x69\x66\x69\x63\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(print_cumulative_gc_stat, false,
            "\x70\x72\x69\x6e\x74\x20\x63\x75\x6d\x75\x6c\x61\x74\x69\x76\x65\x20\x47\x43\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x69\x6e\x20\x6e\x61\x6d\x65\x3d\x76\x61\x6c\x75\x65\x20\x66\x6f\x72\x6d\x61\x74\x20\x6f\x6e\x20\x65\x78\x69\x74")
DEFINE_BOOL(print_max_heap_committed, false,
            "\x70\x72\x69\x6e\x74\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x6f\x66\x20\x74\x68\x65\x20\x6d\x61\x78\x69\x6d\x75\x6d\x20\x6d\x65\x6d\x6f\x72\x79\x20\x63\x6f\x6d\x6d\x69\x74\x74\x65\x64\x20\x66\x6f\x72\x20\x74\x68\x65\x20\x68\x65\x61\x70\x20"
            "\x69\x6e\x20\x6e\x61\x6d\x65\x3d\x76\x61\x6c\x75\x65\x20\x66\x6f\x72\x6d\x61\x74\x20\x6f\x6e\x20\x65\x78\x69\x74")
DEFINE_BOOL(trace_gc_verbose, false,
            "\x70\x72\x69\x6e\x74\x20\x6d\x6f\x72\x65\x20\x64\x65\x74\x61\x69\x6c\x73\x20\x66\x6f\x6c\x6c\x6f\x77\x69\x6e\x67\x20\x65\x61\x63\x68\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e")
DEFINE_INT(trace_allocation_stack_interval, -1,
           "\x70\x72\x69\x6e\x74\x20\x73\x74\x61\x63\x6b\x20\x74\x72\x61\x63\x65\x20\x61\x66\x74\x65\x72\x20\x3c\x6e\x3e\x20\x66\x72\x65\x65\x2d\x6c\x69\x73\x74\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(trace_fragmentation, false, "\x72\x65\x70\x6f\x72\x74\x20\x66\x72\x61\x67\x6d\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x6f\x6c\x64\x20\x73\x70\x61\x63\x65")
DEFINE_BOOL(trace_fragmentation_verbose, false,
            "\x72\x65\x70\x6f\x72\x74\x20\x66\x72\x61\x67\x6d\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x6f\x6c\x64\x20\x73\x70\x61\x63\x65\x20\x28\x64\x65\x74\x61\x69\x6c\x65\x64\x29")
DEFINE_BOOL(trace_evacuation, false, "\x72\x65\x70\x6f\x72\x74\x20\x65\x76\x61\x63\x75\x61\x74\x69\x6f\x6e\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73")
DEFINE_BOOL(trace_mutator_utilization, false,
            "\x70\x72\x69\x6e\x74\x20\x6d\x75\x74\x61\x74\x6f\x72\x20\x75\x74\x69\x6c\x69\x7a\x61\x74\x69\x6f\x6e\x2c\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x73\x70\x65\x65\x64\x2c\x20\x67\x63\x20\x73\x70\x65\x65\x64")
DEFINE_BOOL(weak_embedded_maps_in_optimized_code, true,
            "\x6d\x61\x6b\x65\x20\x6d\x61\x70\x73\x20\x65\x6d\x62\x65\x64\x64\x65\x64\x20\x69\x6e\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65\x20\x77\x65\x61\x6b")
DEFINE_BOOL(weak_embedded_objects_in_optimized_code, true,
            "\x6d\x61\x6b\x65\x20\x6f\x62\x6a\x65\x63\x74\x73\x20\x65\x6d\x62\x65\x64\x64\x65\x64\x20\x69\x6e\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65\x20\x77\x65\x61\x6b")
DEFINE_BOOL(flush_code, true, "\x66\x6c\x75\x73\x68\x20\x63\x6f\x64\x65\x20\x74\x68\x61\x74\x20\x77\x65\x20\x65\x78\x70\x65\x63\x74\x20\x6e\x6f\x74\x20\x74\x6f\x20\x75\x73\x65\x20\x61\x67\x61\x69\x6e")
DEFINE_BOOL(trace_code_flushing, false, "\x74\x72\x61\x63\x65\x20\x63\x6f\x64\x65\x20\x66\x6c\x75\x73\x68\x69\x6e\x67\x20\x70\x72\x6f\x67\x72\x65\x73\x73")
DEFINE_BOOL(age_code, true,
            "\x74\x72\x61\x63\x6b\x20\x75\x6e\x2d\x65\x78\x65\x63\x75\x74\x65\x64\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x73\x20\x74\x6f\x20\x61\x67\x65\x20\x63\x6f\x64\x65\x20\x61\x6e\x64\x20\x66\x6c\x75\x73\x68\x20\x6f\x6e\x6c\x79\x20"
            "\x6f\x6c\x64\x20\x63\x6f\x64\x65\x20\x28\x72\x65\x71\x75\x69\x72\x65\x64\x20\x66\x6f\x72\x20\x63\x6f\x64\x65\x20\x66\x6c\x75\x73\x68\x69\x6e\x67\x29")
DEFINE_BOOL(incremental_marking, true, "\x75\x73\x65\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x61\x6c\x20\x6d\x61\x72\x6b\x69\x6e\x67")
DEFINE_INT(min_progress_during_incremental_marking_finalization, 32,
           "\x6b\x65\x65\x70\x20\x66\x69\x6e\x61\x6c\x69\x7a\x69\x6e\x67\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x61\x6c\x20\x6d\x61\x72\x6b\x69\x6e\x67\x20\x61\x73\x20\x6c\x6f\x6e\x67\x20\x61\x73\x20\x77\x65\x20\x64\x69\x73\x63\x6f\x76\x65\x72\x20\x61\x74\x20"
           "\x6c\x65\x61\x73\x74\x20\x74\x68\x69\x73\x20\x6d\x61\x6e\x79\x20\x75\x6e\x6d\x61\x72\x6b\x65\x64\x20\x6f\x62\x6a\x65\x63\x74\x73")
DEFINE_INT(max_incremental_marking_finalization_rounds, 3,
           "\x61\x74\x20\x6d\x6f\x73\x74\x20\x74\x72\x79\x20\x74\x68\x69\x73\x20\x6d\x61\x6e\x79\x20\x74\x69\x6d\x65\x73\x20\x74\x6f\x20\x66\x69\x6e\x61\x6c\x69\x7a\x65\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x61\x6c\x20\x6d\x61\x72\x6b\x69\x6e\x67")
DEFINE_BOOL(black_allocation, true, "\x75\x73\x65\x20\x62\x6c\x61\x63\x6b\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e")
DEFINE_BOOL(concurrent_sweeping, true, "\x75\x73\x65\x20\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x20\x73\x77\x65\x65\x70\x69\x6e\x67")
DEFINE_BOOL(parallel_compaction, true, "\x75\x73\x65\x20\x70\x61\x72\x61\x6c\x6c\x65\x6c\x20\x63\x6f\x6d\x70\x61\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(parallel_pointer_update, true,
            "\x75\x73\x65\x20\x70\x61\x72\x61\x6c\x6c\x65\x6c\x20\x70\x6f\x69\x6e\x74\x65\x72\x20\x75\x70\x64\x61\x74\x65\x20\x64\x75\x72\x69\x6e\x67\x20\x63\x6f\x6d\x70\x61\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_incremental_marking, false,
            "\x74\x72\x61\x63\x65\x20\x70\x72\x6f\x67\x72\x65\x73\x73\x20\x6f\x66\x20\x74\x68\x65\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x61\x6c\x20\x6d\x61\x72\x6b\x69\x6e\x67")
DEFINE_BOOL(track_gc_object_stats, false,
            "\x74\x72\x61\x63\x6b\x20\x6f\x62\x6a\x65\x63\x74\x20\x63\x6f\x75\x6e\x74\x73\x20\x61\x6e\x64\x20\x6d\x65\x6d\x6f\x72\x79\x20\x75\x73\x61\x67\x65")
DEFINE_BOOL(trace_gc_object_stats, false,
            "\x74\x72\x61\x63\x65\x20\x6f\x62\x6a\x65\x63\x74\x20\x63\x6f\x75\x6e\x74\x73\x20\x61\x6e\x64\x20\x6d\x65\x6d\x6f\x72\x79\x20\x75\x73\x61\x67\x65")
DEFINE_IMPLICATION(trace_gc_object_stats, track_gc_object_stats)
DEFINE_BOOL(track_detached_contexts, true,
            "\x74\x72\x61\x63\x6b\x20\x6e\x61\x74\x69\x76\x65\x20\x63\x6f\x6e\x74\x65\x78\x74\x73\x20\x74\x68\x61\x74\x20\x61\x72\x65\x20\x65\x78\x70\x65\x63\x74\x65\x64\x20\x74\x6f\x20\x62\x65\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x65\x64")
DEFINE_BOOL(trace_detached_contexts, false,
            "\x74\x72\x61\x63\x65\x20\x6e\x61\x74\x69\x76\x65\x20\x63\x6f\x6e\x74\x65\x78\x74\x73\x20\x74\x68\x61\x74\x20\x61\x72\x65\x20\x65\x78\x70\x65\x63\x74\x65\x64\x20\x74\x6f\x20\x62\x65\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x65\x64")
DEFINE_IMPLICATION(trace_detached_contexts, track_detached_contexts)
#ifdef VERIFY_HEAP
DEFINE_BOOL(verify_heap, false, "\x76\x65\x72\x69\x66\x79\x20\x68\x65\x61\x70\x20\x70\x6f\x69\x6e\x74\x65\x72\x73\x20\x62\x65\x66\x6f\x72\x65\x20\x61\x6e\x64\x20\x61\x66\x74\x65\x72\x20\x47\x43")
#endif
DEFINE_BOOL(move_object_start, true, "\x65\x6e\x61\x62\x6c\x65\x20\x6d\x6f\x76\x69\x6e\x67\x20\x6f\x66\x20\x6f\x62\x6a\x65\x63\x74\x20\x73\x74\x61\x72\x74\x73")
DEFINE_BOOL(memory_reducer, true, "\x75\x73\x65\x20\x6d\x65\x6d\x6f\x72\x79\x20\x72\x65\x64\x75\x63\x65\x72")
DEFINE_BOOL(scavenge_reclaim_unmodified_objects, true,
            "\x72\x65\x6d\x6f\x76\x65\x20\x75\x6e\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x61\x6e\x64\x20\x75\x6e\x72\x65\x66\x65\x72\x65\x6e\x63\x65\x64\x20\x6f\x62\x6a\x65\x63\x74\x73")
DEFINE_INT(heap_growing_percent, 0,
           "\x73\x70\x65\x63\x69\x66\x69\x65\x73\x20\x68\x65\x61\x70\x20\x67\x72\x6f\x77\x69\x6e\x67\x20\x66\x61\x63\x74\x6f\x72\x20\x61\x73\x20\x28\x31\x20\x2b\x20\x68\x65\x61\x70\x5f\x67\x72\x6f\x77\x69\x6e\x67\x5f\x70\x65\x72\x63\x65\x6e\x74\x2f\x31\x30\x30\x29")

// counters.cc
DEFINE_INT(histogram_interval, 600000,
           "\x74\x69\x6d\x65\x20\x69\x6e\x74\x65\x72\x76\x61\x6c\x20\x69\x6e\x20\x6d\x73\x20\x66\x6f\x72\x20\x61\x67\x67\x72\x65\x67\x61\x74\x69\x6e\x67\x20\x6d\x65\x6d\x6f\x72\x79\x20\x68\x69\x73\x74\x6f\x67\x72\x61\x6d\x73")

// global-handles.cc
DEFINE_BOOL(trace_object_groups, false,
            "\x70\x72\x69\x6e\x74\x20\x6f\x62\x6a\x65\x63\x74\x20\x67\x72\x6f\x75\x70\x73\x20\x64\x65\x74\x65\x63\x74\x65\x64\x20\x64\x75\x72\x69\x6e\x67\x20\x65\x61\x63\x68\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e")

// heap-snapshot-generator.cc
DEFINE_BOOL(heap_profiler_trace_objects, false,
            "\x44\x75\x6d\x70\x20\x68\x65\x61\x70\x20\x6f\x62\x6a\x65\x63\x74\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x73\x2f\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73\x2f\x73\x69\x7a\x65\x5f\x75\x70\x64\x61\x74\x65\x73")


// sampling-heap-profiler.cc
DEFINE_BOOL(sampling_heap_profiler_suppress_randomness, false,
            "\x55\x73\x65\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x73\x61\x6d\x70\x6c\x65\x20\x69\x6e\x74\x65\x72\x76\x61\x6c\x73\x20\x74\x6f\x20\x65\x6c\x69\x6d\x69\x6e\x61\x74\x65\x20\x74\x65\x73\x74\x20\x66\x6c\x61\x6b\x69\x6e\x65\x73\x73")


// v8.cc
DEFINE_BOOL(use_idle_notification, true,
            "\x55\x73\x65\x20\x69\x64\x6c\x65\x20\x6e\x6f\x74\x69\x66\x69\x63\x61\x74\x69\x6f\x6e\x20\x74\x6f\x20\x72\x65\x64\x75\x63\x65\x20\x6d\x65\x6d\x6f\x72\x79\x20\x66\x6f\x6f\x74\x70\x72\x69\x6e\x74\x2e")
// ic.cc
DEFINE_BOOL(use_ic, true, "\x75\x73\x65\x20\x69\x6e\x6c\x69\x6e\x65\x20\x63\x61\x63\x68\x69\x6e\x67")
DEFINE_BOOL(trace_ic, false, "\x74\x72\x61\x63\x65\x20\x69\x6e\x6c\x69\x6e\x65\x20\x63\x61\x63\x68\x65\x20\x73\x74\x61\x74\x65\x20\x74\x72\x61\x6e\x73\x69\x74\x69\x6f\x6e\x73")

// macro-assembler-ia32.cc
DEFINE_BOOL(native_code_counters, false,
            "\x67\x65\x6e\x65\x72\x61\x74\x65\x20\x65\x78\x74\x72\x61\x20\x63\x6f\x64\x65\x20\x66\x6f\x72\x20\x6d\x61\x6e\x69\x70\x75\x6c\x61\x74\x69\x6e\x67\x20\x73\x74\x61\x74\x73\x20\x63\x6f\x75\x6e\x74\x65\x72\x73")

// mark-compact.cc
DEFINE_BOOL(always_compact, false, "\x50\x65\x72\x66\x6f\x72\x6d\x20\x63\x6f\x6d\x70\x61\x63\x74\x69\x6f\x6e\x20\x6f\x6e\x20\x65\x76\x65\x72\x79\x20\x66\x75\x6c\x6c\x20\x47\x43")
DEFINE_BOOL(never_compact, false,
            "\x4e\x65\x76\x65\x72\x20\x70\x65\x72\x66\x6f\x72\x6d\x20\x63\x6f\x6d\x70\x61\x63\x74\x69\x6f\x6e\x20\x6f\x6e\x20\x66\x75\x6c\x6c\x20\x47\x43\x20\x2d\x20\x74\x65\x73\x74\x69\x6e\x67\x20\x6f\x6e\x6c\x79")
DEFINE_BOOL(compact_code_space, true, "\x43\x6f\x6d\x70\x61\x63\x74\x20\x63\x6f\x64\x65\x20\x73\x70\x61\x63\x65\x20\x6f\x6e\x20\x66\x75\x6c\x6c\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x73")
DEFINE_BOOL(cleanup_code_caches_at_gc, true,
            "\x46\x6c\x75\x73\x68\x20\x69\x6e\x6c\x69\x6e\x65\x20\x63\x61\x63\x68\x65\x73\x20\x70\x72\x69\x6f\x72\x20\x74\x6f\x20\x6d\x61\x72\x6b\x20\x63\x6f\x6d\x70\x61\x63\x74\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x20\x61\x6e\x64\x20"
            "\x66\x6c\x75\x73\x68\x20\x63\x6f\x64\x65\x20\x63\x61\x63\x68\x65\x73\x20\x69\x6e\x20\x6d\x61\x70\x73\x20\x64\x75\x72\x69\x6e\x67\x20\x6d\x61\x72\x6b\x20\x63\x6f\x6d\x70\x61\x63\x74\x20\x63\x79\x63\x6c\x65\x2e")
DEFINE_BOOL(use_marking_progress_bar, true,
            "\x55\x73\x65\x20\x61\x20\x70\x72\x6f\x67\x72\x65\x73\x73\x20\x62\x61\x72\x20\x74\x6f\x20\x73\x63\x61\x6e\x20\x6c\x61\x72\x67\x65\x20\x6f\x62\x6a\x65\x63\x74\x73\x20\x69\x6e\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x73\x20\x77\x68\x65\x6e\x20"
            "\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x61\x6c\x20\x6d\x61\x72\x6b\x69\x6e\x67\x20\x69\x73\x20\x61\x63\x74\x69\x76\x65\x2e")
DEFINE_BOOL(zap_code_space, DEBUG_BOOL,
            "\x5a\x61\x70\x20\x66\x72\x65\x65\x20\x6d\x65\x6d\x6f\x72\x79\x20\x69\x6e\x20\x63\x6f\x64\x65\x20\x73\x70\x61\x63\x65\x20\x77\x69\x74\x68\x20\x30\x78\x43\x43\x20\x77\x68\x69\x6c\x65\x20\x73\x77\x65\x65\x70\x69\x6e\x67\x2e")
DEFINE_INT(random_seed, 0,
           "\x44\x65\x66\x61\x75\x6c\x74\x20\x73\x65\x65\x64\x20\x66\x6f\x72\x20\x69\x6e\x69\x74\x69\x61\x6c\x69\x7a\x69\x6e\x67\x20\x72\x61\x6e\x64\x6f\x6d\x20\x67\x65\x6e\x65\x72\x61\x74\x6f\x72\x20"
           "\x28\x30\x2c\x20\x74\x68\x65\x20\x64\x65\x66\x61\x75\x6c\x74\x2c\x20\x6d\x65\x61\x6e\x73\x20\x74\x6f\x20\x75\x73\x65\x20\x73\x79\x73\x74\x65\x6d\x20\x72\x61\x6e\x64\x6f\x6d\x29\x2e")

// objects.cc
DEFINE_BOOL(trace_weak_arrays, false, "\x54\x72\x61\x63\x65\x20\x57\x65\x61\x6b\x46\x69\x78\x65\x64\x41\x72\x72\x61\x79\x20\x75\x73\x61\x67\x65")
DEFINE_BOOL(track_prototype_users, false,
            "\x4b\x65\x65\x70\x20\x74\x72\x61\x63\x6b\x20\x6f\x66\x20\x77\x68\x69\x63\x68\x20\x6d\x61\x70\x73\x20\x72\x65\x66\x65\x72\x20\x74\x6f\x20\x61\x20\x67\x69\x76\x65\x6e\x20\x70\x72\x6f\x74\x6f\x74\x79\x70\x65\x20\x6f\x62\x6a\x65\x63\x74")
DEFINE_BOOL(trace_prototype_users, false,
            "\x54\x72\x61\x63\x65\x20\x75\x70\x64\x61\x74\x65\x73\x20\x74\x6f\x20\x70\x72\x6f\x74\x6f\x74\x79\x70\x65\x20\x75\x73\x65\x72\x20\x74\x72\x61\x63\x6b\x69\x6e\x67")
DEFINE_BOOL(eliminate_prototype_chain_checks, true,
            "\x43\x6f\x6c\x6c\x61\x70\x73\x65\x20\x70\x72\x6f\x74\x6f\x74\x79\x70\x65\x20\x63\x68\x61\x69\x6e\x20\x63\x68\x65\x63\x6b\x73\x20\x69\x6e\x74\x6f\x20\x73\x69\x6e\x67\x6c\x65\x2d\x63\x65\x6c\x6c\x20\x63\x68\x65\x63\x6b\x73")
DEFINE_IMPLICATION(eliminate_prototype_chain_checks, track_prototype_users)
DEFINE_BOOL(use_verbose_printer, true, "\x61\x6c\x6c\x6f\x77\x73\x20\x76\x65\x72\x62\x6f\x73\x65\x20\x70\x72\x69\x6e\x74\x69\x6e\x67")
DEFINE_BOOL(trace_for_in_enumerate, false, "\x54\x72\x61\x63\x65\x20\x66\x6f\x72\x2d\x69\x6e\x20\x65\x6e\x75\x6d\x65\x72\x61\x74\x65\x20\x73\x6c\x6f\x77\x2d\x70\x61\x74\x68\x73")
#if TRACE_MAPS
DEFINE_BOOL(trace_maps, false, "\x74\x72\x61\x63\x65\x20\x6d\x61\x70\x20\x63\x72\x65\x61\x74\x69\x6f\x6e")
#endif

// parser.cc
DEFINE_BOOL(allow_natives_syntax, false, "\x61\x6c\x6c\x6f\x77\x20\x6e\x61\x74\x69\x76\x65\x73\x20\x73\x79\x6e\x74\x61\x78")
DEFINE_BOOL(trace_parse, false, "\x74\x72\x61\x63\x65\x20\x70\x61\x72\x73\x69\x6e\x67\x20\x61\x6e\x64\x20\x70\x72\x65\x70\x61\x72\x73\x69\x6e\x67")

// simulator-arm.cc, simulator-arm64.cc and simulator-mips.cc
DEFINE_BOOL(trace_sim, false, "\x54\x72\x61\x63\x65\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72\x20\x65\x78\x65\x63\x75\x74\x69\x6f\x6e")
DEFINE_BOOL(debug_sim, false, "\x45\x6e\x61\x62\x6c\x65\x20\x64\x65\x62\x75\x67\x67\x69\x6e\x67\x20\x74\x68\x65\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72")
DEFINE_BOOL(check_icache, false,
            "\x43\x68\x65\x63\x6b\x20\x69\x63\x61\x63\x68\x65\x20\x66\x6c\x75\x73\x68\x65\x73\x20\x69\x6e\x20\x41\x52\x4d\x20\x61\x6e\x64\x20\x4d\x49\x50\x53\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72")
DEFINE_INT(stop_sim_at, 0, "\x53\x69\x6d\x75\x6c\x61\x74\x6f\x72\x20\x73\x74\x6f\x70\x20\x61\x66\x74\x65\x72\x20\x78\x20\x6e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x73")
#if defined(V8_TARGET_ARCH_ARM64) || defined(V8_TARGET_ARCH_MIPS64) || \
    defined(V8_TARGET_ARCH_PPC64)
DEFINE_INT(sim_stack_alignment, 16,
           "\x53\x74\x61\x63\x6b\x20\x61\x6c\x69\x67\x6e\x6d\x65\x6e\x74\x20\x69\x6e\x20\x62\x79\x74\x65\x73\x20\x69\x6e\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72\x2e\x20\x54\x68\x69\x73\x20\x6d\x75\x73\x74\x20\x62\x65\x20\x61\x20\x70\x6f\x77\x65\x72\x20\x6f\x66\x20\x74\x77\x6f\x20"
           "\x61\x6e\x64\x20\x69\x74\x20\x6d\x75\x73\x74\x20\x62\x65\x20\x61\x74\x20\x6c\x65\x61\x73\x74\x20\x31\x36\x2e\x20\x31\x36\x20\x69\x73\x20\x64\x65\x66\x61\x75\x6c\x74\x2e")
#else
DEFINE_INT(sim_stack_alignment, 8,
           "\x53\x74\x61\x63\x6b\x20\x61\x6c\x69\x6e\x67\x6d\x65\x6e\x74\x20\x69\x6e\x20\x62\x79\x74\x65\x73\x20\x69\x6e\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72\x20\x28\x34\x20\x6f\x72\x20\x38\x2c\x20\x38\x20\x69\x73\x20\x64\x65\x66\x61\x75\x6c\x74\x29")
#endif
DEFINE_INT(sim_stack_size, 2 * MB / KB,
           "\x53\x74\x61\x63\x6b\x20\x73\x69\x7a\x65\x20\x6f\x66\x20\x74\x68\x65\x20\x41\x52\x4d\x36\x34\x2c\x20\x4d\x49\x50\x53\x36\x34\x20\x61\x6e\x64\x20\x50\x50\x43\x36\x34\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72\x20"
           "\x69\x6e\x20\x6b\x42\x79\x74\x65\x73\x20\x28\x64\x65\x66\x61\x75\x6c\x74\x20\x69\x73\x20\x32\x20\x4d\x42\x29")
DEFINE_BOOL(log_regs_modified, true,
            "\x57\x68\x65\x6e\x20\x6c\x6f\x67\x67\x69\x6e\x67\x20\x72\x65\x67\x69\x73\x74\x65\x72\x20\x76\x61\x6c\x75\x65\x73\x2c\x20\x6f\x6e\x6c\x79\x20\x70\x72\x69\x6e\x74\x20\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x72\x65\x67\x69\x73\x74\x65\x72\x73\x2e")
DEFINE_BOOL(log_colour, ENABLE_LOG_COLOUR,
            "\x57\x68\x65\x6e\x20\x6c\x6f\x67\x67\x69\x6e\x67\x2c\x20\x74\x72\x79\x20\x74\x6f\x20\x75\x73\x65\x20\x63\x6f\x6c\x6f\x75\x72\x65\x64\x20\x6f\x75\x74\x70\x75\x74\x2e")
DEFINE_BOOL(ignore_asm_unimplemented_break, false,
            "\x44\x6f\x6e\x27\x74\x20\x62\x72\x65\x61\x6b\x20\x66\x6f\x72\x20\x41\x53\x4d\x5f\x55\x4e\x49\x4d\x50\x4c\x45\x4d\x45\x4e\x54\x45\x44\x5f\x42\x52\x45\x41\x4b\x20\x6d\x61\x63\x72\x6f\x73\x2e")
DEFINE_BOOL(trace_sim_messages, false,
            "\x54\x72\x61\x63\x65\x20\x73\x69\x6d\x75\x6c\x61\x74\x6f\x72\x20\x64\x65\x62\x75\x67\x20\x6d\x65\x73\x73\x61\x67\x65\x73\x2e\x20\x49\x6d\x70\x6c\x69\x65\x64\x20\x62\x79\x20\x2d\x2d\x74\x72\x61\x63\x65\x2d\x73\x69\x6d\x2e")

// isolate.cc
DEFINE_BOOL(stack_trace_on_illegal, false,
            "\x70\x72\x69\x6e\x74\x20\x73\x74\x61\x63\x6b\x20\x74\x72\x61\x63\x65\x20\x77\x68\x65\x6e\x20\x61\x6e\x20\x69\x6c\x6c\x65\x67\x61\x6c\x20\x65\x78\x63\x65\x70\x74\x69\x6f\x6e\x20\x69\x73\x20\x74\x68\x72\x6f\x77\x6e")
DEFINE_BOOL(abort_on_uncaught_exception, false,
            "\x61\x62\x6f\x72\x74\x20\x70\x72\x6f\x67\x72\x61\x6d\x20\x28\x64\x75\x6d\x70\x20\x63\x6f\x72\x65\x29\x20\x77\x68\x65\x6e\x20\x61\x6e\x20\x75\x6e\x63\x61\x75\x67\x68\x74\x20\x65\x78\x63\x65\x70\x74\x69\x6f\x6e\x20\x69\x73\x20\x74\x68\x72\x6f\x77\x6e")
DEFINE_BOOL(randomize_hashes, true,
            "\x72\x61\x6e\x64\x6f\x6d\x69\x7a\x65\x20\x68\x61\x73\x68\x65\x73\x20\x74\x6f\x20\x61\x76\x6f\x69\x64\x20\x70\x72\x65\x64\x69\x63\x74\x61\x62\x6c\x65\x20\x68\x61\x73\x68\x20\x63\x6f\x6c\x6c\x69\x73\x69\x6f\x6e\x73\x20"
            "\x28\x77\x69\x74\x68\x20\x73\x6e\x61\x70\x73\x68\x6f\x74\x73\x20\x74\x68\x69\x73\x20\x6f\x70\x74\x69\x6f\x6e\x20\x63\x61\x6e\x6e\x6f\x74\x20\x6f\x76\x65\x72\x72\x69\x64\x65\x20\x74\x68\x65\x20\x62\x61\x6b\x65\x64\x2d\x69\x6e\x20\x73\x65\x65\x64\x29")
DEFINE_INT(hash_seed, 0,
           "\x46\x69\x78\x65\x64\x20\x73\x65\x65\x64\x20\x74\x6f\x20\x75\x73\x65\x20\x74\x6f\x20\x68\x61\x73\x68\x20\x70\x72\x6f\x70\x65\x72\x74\x79\x20\x6b\x65\x79\x73\x20\x28\x30\x20\x6d\x65\x61\x6e\x73\x20\x72\x61\x6e\x64\x6f\x6d\x29"
           "\x28\x77\x69\x74\x68\x20\x73\x6e\x61\x70\x73\x68\x6f\x74\x73\x20\x74\x68\x69\x73\x20\x6f\x70\x74\x69\x6f\x6e\x20\x63\x61\x6e\x6e\x6f\x74\x20\x6f\x76\x65\x72\x72\x69\x64\x65\x20\x74\x68\x65\x20\x62\x61\x6b\x65\x64\x2d\x69\x6e\x20\x73\x65\x65\x64\x29")

// runtime.cc
DEFINE_BOOL(runtime_call_stats, false, "\x72\x65\x70\x6f\x72\x74\x20\x72\x75\x6e\x74\x69\x6d\x65\x20\x63\x61\x6c\x6c\x20\x63\x6f\x75\x6e\x74\x73\x20\x61\x6e\x64\x20\x74\x69\x6d\x65\x73")

// snapshot-common.cc
DEFINE_BOOL(profile_deserialization, false,
            "\x50\x72\x69\x6e\x74\x20\x74\x68\x65\x20\x74\x69\x6d\x65\x20\x69\x74\x20\x74\x61\x6b\x65\x73\x20\x74\x6f\x20\x64\x65\x73\x65\x72\x69\x61\x6c\x69\x7a\x65\x20\x74\x68\x65\x20\x73\x6e\x61\x70\x73\x68\x6f\x74\x2e")
DEFINE_BOOL(serialization_statistics, false,
            "\x43\x6f\x6c\x6c\x65\x63\x74\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x6f\x6e\x20\x73\x65\x72\x69\x61\x6c\x69\x7a\x65\x64\x20\x6f\x62\x6a\x65\x63\x74\x73\x2e")

// Regexp
DEFINE_BOOL(regexp_optimization, true, "\x67\x65\x6e\x65\x72\x61\x74\x65\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x72\x65\x67\x65\x78\x70\x20\x63\x6f\x64\x65")

// Testing flags test/cctest/test-{flags,api,serialization}.cc
DEFINE_BOOL(testing_bool_flag, true, "\x74\x65\x73\x74\x69\x6e\x67\x5f\x62\x6f\x6f\x6c\x5f\x66\x6c\x61\x67")
DEFINE_MAYBE_BOOL(testing_maybe_bool_flag, "\x74\x65\x73\x74\x69\x6e\x67\x5f\x6d\x61\x79\x62\x65\x5f\x62\x6f\x6f\x6c\x5f\x66\x6c\x61\x67")
DEFINE_INT(testing_int_flag, 13, "\x74\x65\x73\x74\x69\x6e\x67\x5f\x69\x6e\x74\x5f\x66\x6c\x61\x67")
DEFINE_FLOAT(testing_float_flag, 2.5, "\x66\x6c\x6f\x61\x74\x2d\x66\x6c\x61\x67")
DEFINE_STRING(testing_string_flag, "\x48\x65\x6c\x6c\x6f\x2c\x20\x77\x6f\x72\x6c\x64\x21", "\x73\x74\x72\x69\x6e\x67\x2d\x66\x6c\x61\x67")
DEFINE_INT(testing_prng_seed, 42, "\x53\x65\x65\x64\x20\x75\x73\x65\x64\x20\x66\x6f\x72\x20\x74\x68\x72\x65\x61\x64\x69\x6e\x67\x20\x74\x65\x73\x74\x20\x72\x61\x6e\x64\x6f\x6d\x6e\x65\x73\x73")
#ifdef _WIN32
DEFINE_STRING(testing_serialization_file, "\x43\x3a\x5c\x57\x69\x6e\x64\x6f\x77\x73\x5c\x54\x65\x6d\x70\x5c\x73\x65\x72\x64\x65\x73",
              "\x66\x69\x6c\x65\x20\x69\x6e\x20\x77\x68\x69\x63\x68\x20\x74\x6f\x20\x74\x65\x73\x74\x69\x6e\x67\x5f\x73\x65\x72\x69\x61\x6c\x69\x7a\x65\x20\x68\x65\x61\x70")
#else
DEFINE_STRING(testing_serialization_file, "\x2f\x74\x6d\x70\x2f\x73\x65\x72\x64\x65\x73",
              "\x66\x69\x6c\x65\x20\x69\x6e\x20\x77\x68\x69\x63\x68\x20\x74\x6f\x20\x73\x65\x72\x69\x61\x6c\x69\x7a\x65\x20\x68\x65\x61\x70")
#endif

// mksnapshot.cc
DEFINE_STRING(startup_src, NULL,
              "\x57\x72\x69\x74\x65\x20\x56\x38\x20\x73\x74\x61\x72\x74\x75\x70\x20\x61\x73\x20\x43\x2b\x2b\x20\x73\x72\x63\x2e\x20\x28\x6d\x6b\x73\x6e\x61\x70\x73\x68\x6f\x74\x20\x6f\x6e\x6c\x79\x29")
DEFINE_STRING(startup_blob, NULL,
              "\x57\x72\x69\x74\x65\x20\x56\x38\x20\x73\x74\x61\x72\x74\x75\x70\x20\x62\x6c\x6f\x62\x20\x66\x69\x6c\x65\x2e\x20\x28\x6d\x6b\x73\x6e\x61\x70\x73\x68\x6f\x74\x20\x6f\x6e\x6c\x79\x29")

// code-stubs-hydrogen.cc
DEFINE_BOOL(profile_hydrogen_code_stub_compilation, false,
            "\x50\x72\x69\x6e\x74\x20\x74\x68\x65\x20\x74\x69\x6d\x65\x20\x69\x74\x20\x74\x61\x6b\x65\x73\x20\x74\x6f\x20\x6c\x61\x7a\x69\x6c\x79\x20\x63\x6f\x6d\x70\x69\x6c\x65\x20\x68\x79\x64\x72\x6f\x67\x65\x6e\x20\x63\x6f\x64\x65\x20\x73\x74\x75\x62\x73\x2e")

DEFINE_BOOL(predictable, false, "\x65\x6e\x61\x62\x6c\x65\x20\x70\x72\x65\x64\x69\x63\x74\x61\x62\x6c\x65\x20\x6d\x6f\x64\x65")
DEFINE_NEG_IMPLICATION(predictable, concurrent_recompilation)
DEFINE_NEG_IMPLICATION(predictable, concurrent_sweeping)
DEFINE_NEG_IMPLICATION(predictable, parallel_compaction)
DEFINE_NEG_IMPLICATION(predictable, memory_reducer)

// mark-compact.cc
DEFINE_BOOL(force_marking_deque_overflows, false,
            "\x66\x6f\x72\x63\x65\x20\x6f\x76\x65\x72\x66\x6c\x6f\x77\x73\x20\x6f\x66\x20\x6d\x61\x72\x6b\x69\x6e\x67\x20\x64\x65\x71\x75\x65\x20\x62\x79\x20\x72\x65\x64\x75\x63\x69\x6e\x67\x20\x69\x74\x27\x73\x20\x73\x69\x7a\x65\x20"
            "\x74\x6f\x20\x36\x34\x20\x77\x6f\x72\x64\x73")

DEFINE_BOOL(stress_compaction, false,
            "\x73\x74\x72\x65\x73\x73\x20\x74\x68\x65\x20\x47\x43\x20\x63\x6f\x6d\x70\x61\x63\x74\x6f\x72\x20\x74\x6f\x20\x66\x6c\x75\x73\x68\x20\x6f\x75\x74\x20\x62\x75\x67\x73\x20\x28\x69\x6d\x70\x6c\x69\x65\x73\x20"
            "\x2d\x2d\x66\x6f\x72\x63\x65\x5f\x6d\x61\x72\x6b\x69\x6e\x67\x5f\x64\x65\x71\x75\x65\x5f\x6f\x76\x65\x72\x66\x6c\x6f\x77\x73\x29")

DEFINE_BOOL(manual_evacuation_candidates_selection, false,
            "\x54\x65\x73\x74\x20\x6d\x6f\x64\x65\x20\x6f\x6e\x6c\x79\x20\x66\x6c\x61\x67\x2e\x20\x49\x74\x20\x61\x6c\x6c\x6f\x77\x73\x20\x61\x6e\x20\x75\x6e\x69\x74\x20\x74\x65\x73\x74\x20\x74\x6f\x20\x73\x65\x6c\x65\x63\x74\x20\x65\x76\x61\x63\x75\x61\x74\x69\x6f\x6e\x20"
            "\x63\x61\x6e\x64\x69\x64\x61\x74\x65\x73\x20\x70\x61\x67\x65\x73\x20\x28\x72\x65\x71\x75\x69\x72\x65\x73\x20\x2d\x2d\x73\x74\x72\x65\x73\x73\x5f\x63\x6f\x6d\x70\x61\x63\x74\x69\x6f\x6e\x29\x2e")

// api.cc
DEFINE_INT(external_allocation_limit_incremental_time, 1,
           "\x54\x69\x6d\x65\x20\x73\x70\x65\x6e\x74\x20\x69\x6e\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x61\x6c\x20\x6d\x61\x72\x6b\x69\x6e\x67\x20\x73\x74\x65\x70\x73\x20\x28\x69\x6e\x20\x6d\x73\x29\x20\x6f\x6e\x63\x65\x20\x74\x68\x65\x20\x65\x78\x74\x65\x72\x6e\x61\x6c\x20"
           "\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x6c\x69\x6d\x69\x74\x20\x69\x73\x20\x72\x65\x61\x63\x68\x65\x64")

DEFINE_BOOL(disable_old_api_accessors, false,
            "\x44\x69\x73\x61\x62\x6c\x65\x20\x6f\x6c\x64\x2d\x73\x74\x79\x6c\x65\x20\x41\x50\x49\x20\x61\x63\x63\x65\x73\x73\x6f\x72\x73\x20\x77\x68\x6f\x73\x65\x20\x73\x65\x74\x74\x65\x72\x73\x20\x74\x72\x69\x67\x67\x65\x72\x20\x74\x68\x72\x6f\x75\x67\x68\x20\x74\x68\x65\x20"
            "\x70\x72\x6f\x74\x6f\x74\x79\x70\x65\x20\x63\x68\x61\x69\x6e")

//
// Dev shell flags
//

DEFINE_BOOL(help, false, "\x50\x72\x69\x6e\x74\x20\x75\x73\x61\x67\x65\x20\x6d\x65\x73\x73\x61\x67\x65\x2c\x20\x69\x6e\x63\x6c\x75\x64\x69\x6e\x67\x20\x66\x6c\x61\x67\x73\x2c\x20\x6f\x6e\x20\x63\x6f\x6e\x73\x6f\x6c\x65")
DEFINE_BOOL(dump_counters, false, "\x44\x75\x6d\x70\x20\x63\x6f\x75\x6e\x74\x65\x72\x73\x20\x6f\x6e\x20\x65\x78\x69\x74")

DEFINE_STRING(map_counters, "", "\x4d\x61\x70\x20\x63\x6f\x75\x6e\x74\x65\x72\x73\x20\x74\x6f\x20\x61\x20\x66\x69\x6c\x65")
DEFINE_ARGS(js_arguments,
            "\x50\x61\x73\x73\x20\x61\x6c\x6c\x20\x72\x65\x6d\x61\x69\x6e\x69\x6e\x67\x20\x61\x72\x67\x75\x6d\x65\x6e\x74\x73\x20\x74\x6f\x20\x74\x68\x65\x20\x73\x63\x72\x69\x70\x74\x2e\x20\x41\x6c\x69\x61\x73\x20\x66\x6f\x72\x20\x22\x2d\x2d\x22\x2e")

//
// GDB JIT integration flags.
//
#undef FLAG
#ifdef ENABLE_GDB_JIT_INTERFACE
#define FLAG FLAG_FULL
#else
#define FLAG FLAG_READONLY
#endif

DEFINE_BOOL(gdbjit, false, "\x65\x6e\x61\x62\x6c\x65\x20\x47\x44\x42\x4a\x49\x54\x20\x69\x6e\x74\x65\x72\x66\x61\x63\x65")
DEFINE_BOOL(gdbjit_full, false, "\x65\x6e\x61\x62\x6c\x65\x20\x47\x44\x42\x4a\x49\x54\x20\x69\x6e\x74\x65\x72\x66\x61\x63\x65\x20\x66\x6f\x72\x20\x61\x6c\x6c\x20\x63\x6f\x64\x65\x20\x6f\x62\x6a\x65\x63\x74\x73")
DEFINE_BOOL(gdbjit_dump, false, "\x64\x75\x6d\x70\x20\x65\x6c\x66\x20\x6f\x62\x6a\x65\x63\x74\x73\x20\x77\x69\x74\x68\x20\x64\x65\x62\x75\x67\x20\x69\x6e\x66\x6f\x20\x74\x6f\x20\x64\x69\x73\x6b")
DEFINE_STRING(gdbjit_dump_filter, "",
              "\x64\x75\x6d\x70\x20\x6f\x6e\x6c\x79\x20\x6f\x62\x6a\x65\x63\x74\x73\x20\x63\x6f\x6e\x74\x61\x69\x6e\x69\x6e\x67\x20\x74\x68\x69\x73\x20\x73\x75\x62\x73\x74\x72\x69\x6e\x67")

#ifdef ENABLE_GDB_JIT_INTERFACE
DEFINE_IMPLICATION(gdbjit_full, gdbjit)
DEFINE_IMPLICATION(gdbjit_dump, gdbjit)
#endif
DEFINE_NEG_IMPLICATION(gdbjit, compact_code_space)

//
// Debug only flags
//
#undef FLAG
#ifdef DEBUG
#define FLAG FLAG_FULL
#else
#define FLAG FLAG_READONLY
#endif

// checks.cc
#ifdef ENABLE_SLOW_DCHECKS
DEFINE_BOOL(enable_slow_asserts, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x61\x73\x73\x65\x72\x74\x73\x20\x74\x68\x61\x74\x20\x61\x72\x65\x20\x73\x6c\x6f\x77\x20\x74\x6f\x20\x65\x78\x65\x63\x75\x74\x65")
#endif

// codegen-ia32.cc / codegen-arm.cc / macro-assembler-*.cc
DEFINE_BOOL(print_source, false, "\x70\x72\x65\x74\x74\x79\x20\x70\x72\x69\x6e\x74\x20\x73\x6f\x75\x72\x63\x65\x20\x63\x6f\x64\x65")
DEFINE_BOOL(print_builtin_source, false,
            "\x70\x72\x65\x74\x74\x79\x20\x70\x72\x69\x6e\x74\x20\x73\x6f\x75\x72\x63\x65\x20\x63\x6f\x64\x65\x20\x66\x6f\x72\x20\x62\x75\x69\x6c\x74\x69\x6e\x73")
DEFINE_BOOL(print_ast, false, "\x70\x72\x69\x6e\x74\x20\x73\x6f\x75\x72\x63\x65\x20\x41\x53\x54")
DEFINE_BOOL(print_builtin_ast, false, "\x70\x72\x69\x6e\x74\x20\x73\x6f\x75\x72\x63\x65\x20\x41\x53\x54\x20\x66\x6f\x72\x20\x62\x75\x69\x6c\x74\x69\x6e\x73")
DEFINE_BOOL(trap_on_abort, false, "\x72\x65\x70\x6c\x61\x63\x65\x20\x61\x62\x6f\x72\x74\x73\x20\x62\x79\x20\x62\x72\x65\x61\x6b\x70\x6f\x69\x6e\x74\x73")

// compiler.cc
DEFINE_BOOL(print_builtin_scopes, false, "\x70\x72\x69\x6e\x74\x20\x73\x63\x6f\x70\x65\x73\x20\x66\x6f\x72\x20\x62\x75\x69\x6c\x74\x69\x6e\x73")
DEFINE_BOOL(print_scopes, false, "\x70\x72\x69\x6e\x74\x20\x73\x63\x6f\x70\x65\x73")

// contexts.cc
DEFINE_BOOL(trace_contexts, false, "\x74\x72\x61\x63\x65\x20\x63\x6f\x6e\x74\x65\x78\x74\x73\x20\x6f\x70\x65\x72\x61\x74\x69\x6f\x6e\x73")

// heap.cc
DEFINE_BOOL(gc_verbose, false, "\x70\x72\x69\x6e\x74\x20\x73\x74\x75\x66\x66\x20\x64\x75\x72\x69\x6e\x67\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e")
DEFINE_BOOL(heap_stats, false, "\x72\x65\x70\x6f\x72\x74\x20\x68\x65\x61\x70\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x62\x65\x66\x6f\x72\x65\x20\x61\x6e\x64\x20\x61\x66\x74\x65\x72\x20\x47\x43")
DEFINE_BOOL(code_stats, false, "\x72\x65\x70\x6f\x72\x74\x20\x63\x6f\x64\x65\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x61\x66\x74\x65\x72\x20\x47\x43")
DEFINE_BOOL(print_handles, false, "\x72\x65\x70\x6f\x72\x74\x20\x68\x61\x6e\x64\x6c\x65\x73\x20\x61\x66\x74\x65\x72\x20\x47\x43")
DEFINE_BOOL(check_handle_count, false,
            "\x43\x68\x65\x63\x6b\x20\x74\x68\x61\x74\x20\x74\x68\x65\x72\x65\x20\x61\x72\x65\x20\x6e\x6f\x74\x20\x74\x6f\x6f\x20\x6d\x61\x6e\x79\x20\x68\x61\x6e\x64\x6c\x65\x73\x20\x61\x74\x20\x47\x43")
DEFINE_BOOL(print_global_handles, false, "\x72\x65\x70\x6f\x72\x74\x20\x67\x6c\x6f\x62\x61\x6c\x20\x68\x61\x6e\x64\x6c\x65\x73\x20\x61\x66\x74\x65\x72\x20\x47\x43")

// TurboFan debug-only flags.
DEFINE_BOOL(print_turbo_replay, false,
            "\x70\x72\x69\x6e\x74\x20\x43\x2b\x2b\x20\x63\x6f\x64\x65\x20\x74\x6f\x20\x72\x65\x63\x72\x65\x61\x74\x65\x20\x54\x75\x72\x62\x6f\x46\x61\x6e\x20\x67\x72\x61\x70\x68\x73")
DEFINE_BOOL(trace_turbo_escape, false, "\x65\x6e\x61\x62\x6c\x65\x20\x74\x72\x61\x63\x69\x6e\x67\x20\x69\x6e\x20\x65\x73\x63\x61\x70\x65\x20\x61\x6e\x61\x6c\x79\x73\x69\x73")

// objects.cc
DEFINE_BOOL(trace_normalization, false,
            "\x70\x72\x69\x6e\x74\x73\x20\x77\x68\x65\x6e\x20\x6f\x62\x6a\x65\x63\x74\x73\x20\x61\x72\x65\x20\x74\x75\x72\x6e\x65\x64\x20\x69\x6e\x74\x6f\x20\x64\x69\x63\x74\x69\x6f\x6e\x61\x72\x69\x65\x73\x2e")

// runtime.cc
DEFINE_BOOL(trace_lazy, false, "\x74\x72\x61\x63\x65\x20\x6c\x61\x7a\x79\x20\x63\x6f\x6d\x70\x69\x6c\x61\x74\x69\x6f\x6e")

// spaces.cc
DEFINE_BOOL(collect_heap_spill_statistics, false,
            "\x72\x65\x70\x6f\x72\x74\x20\x68\x65\x61\x70\x20\x73\x70\x69\x6c\x6c\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x61\x6c\x6f\x6e\x67\x20\x77\x69\x74\x68\x20\x68\x65\x61\x70\x5f\x73\x74\x61\x74\x73\x20"
            "\x28\x72\x65\x71\x75\x69\x72\x65\x73\x20\x68\x65\x61\x70\x5f\x73\x74\x61\x74\x73\x29")
DEFINE_BOOL(trace_live_bytes, false,
            "\x74\x72\x61\x63\x65\x20\x69\x6e\x63\x72\x65\x6d\x65\x6e\x74\x69\x6e\x67\x20\x61\x6e\x64\x20\x72\x65\x73\x65\x74\x74\x69\x6e\x67\x20\x6f\x66\x20\x6c\x69\x76\x65\x20\x62\x79\x74\x65\x73")

DEFINE_BOOL(trace_isolates, false, "\x74\x72\x61\x63\x65\x20\x69\x73\x6f\x6c\x61\x74\x65\x20\x73\x74\x61\x74\x65\x20\x63\x68\x61\x6e\x67\x65\x73")

// Regexp
DEFINE_BOOL(regexp_possessive_quantifier, false,
            "\x65\x6e\x61\x62\x6c\x65\x20\x70\x6f\x73\x73\x65\x73\x73\x69\x76\x65\x20\x71\x75\x61\x6e\x74\x69\x66\x69\x65\x72\x20\x73\x79\x6e\x74\x61\x78\x20\x66\x6f\x72\x20\x74\x65\x73\x74\x69\x6e\x67")
DEFINE_BOOL(trace_regexp_bytecodes, false, "\x74\x72\x61\x63\x65\x20\x72\x65\x67\x65\x78\x70\x20\x62\x79\x74\x65\x63\x6f\x64\x65\x20\x65\x78\x65\x63\x75\x74\x69\x6f\x6e")
DEFINE_BOOL(trace_regexp_assembler, false,
            "\x74\x72\x61\x63\x65\x20\x72\x65\x67\x65\x78\x70\x20\x6d\x61\x63\x72\x6f\x20\x61\x73\x73\x65\x6d\x62\x6c\x65\x72\x20\x63\x61\x6c\x6c\x73\x2e")
DEFINE_BOOL(trace_regexp_parser, false, "\x74\x72\x61\x63\x65\x20\x72\x65\x67\x65\x78\x70\x20\x70\x61\x72\x73\x69\x6e\x67")

// Debugger
DEFINE_BOOL(print_break_location, false, "\x70\x72\x69\x6e\x74\x20\x73\x6f\x75\x72\x63\x65\x20\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x6f\x6e\x20\x64\x65\x62\x75\x67\x20\x62\x72\x65\x61\x6b")

//
// Logging and profiling flags
//
#undef FLAG
#define FLAG FLAG_FULL

// log.cc
DEFINE_BOOL(log, false,
            "\x4d\x69\x6e\x69\x6d\x61\x6c\x20\x6c\x6f\x67\x67\x69\x6e\x67\x20\x28\x6e\x6f\x20\x41\x50\x49\x2c\x20\x63\x6f\x64\x65\x2c\x20\x47\x43\x2c\x20\x73\x75\x73\x70\x65\x63\x74\x2c\x20\x6f\x72\x20\x68\x61\x6e\x64\x6c\x65\x73\x20\x73\x61\x6d\x70\x6c\x65\x73\x29\x2e")
DEFINE_BOOL(log_all, false, "\x4c\x6f\x67\x20\x61\x6c\x6c\x20\x65\x76\x65\x6e\x74\x73\x20\x74\x6f\x20\x74\x68\x65\x20\x6c\x6f\x67\x20\x66\x69\x6c\x65\x2e")
DEFINE_BOOL(log_api, false, "\x4c\x6f\x67\x20\x41\x50\x49\x20\x65\x76\x65\x6e\x74\x73\x20\x74\x6f\x20\x74\x68\x65\x20\x6c\x6f\x67\x20\x66\x69\x6c\x65\x2e")
DEFINE_BOOL(log_code, false,
            "\x4c\x6f\x67\x20\x63\x6f\x64\x65\x20\x65\x76\x65\x6e\x74\x73\x20\x74\x6f\x20\x74\x68\x65\x20\x6c\x6f\x67\x20\x66\x69\x6c\x65\x20\x77\x69\x74\x68\x6f\x75\x74\x20\x70\x72\x6f\x66\x69\x6c\x69\x6e\x67\x2e")
DEFINE_BOOL(log_gc, false,
            "\x4c\x6f\x67\x20\x68\x65\x61\x70\x20\x73\x61\x6d\x70\x6c\x65\x73\x20\x6f\x6e\x20\x67\x61\x72\x62\x61\x67\x65\x20\x63\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x74\x68\x65\x20\x68\x70\x32\x70\x73\x20\x74\x6f\x6f\x6c\x2e")
DEFINE_BOOL(log_handles, false, "\x4c\x6f\x67\x20\x67\x6c\x6f\x62\x61\x6c\x20\x68\x61\x6e\x64\x6c\x65\x20\x65\x76\x65\x6e\x74\x73\x2e")
DEFINE_BOOL(log_suspect, false, "\x4c\x6f\x67\x20\x73\x75\x73\x70\x65\x63\x74\x20\x6f\x70\x65\x72\x61\x74\x69\x6f\x6e\x73\x2e")
DEFINE_BOOL(prof, false,
            "\x4c\x6f\x67\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x61\x6c\x20\x70\x72\x6f\x66\x69\x6c\x69\x6e\x67\x20\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x20\x28\x69\x6d\x70\x6c\x69\x65\x73\x20\x2d\x2d\x6c\x6f\x67\x2d\x63\x6f\x64\x65\x29\x2e")
DEFINE_BOOL(prof_cpp, false, "\x4c\x69\x6b\x65\x20\x2d\x2d\x70\x72\x6f\x66\x2c\x20\x62\x75\x74\x20\x69\x67\x6e\x6f\x72\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x63\x6f\x64\x65\x2e")
DEFINE_IMPLICATION(prof, prof_cpp)
DEFINE_BOOL(prof_browser_mode, true,
            "\x55\x73\x65\x64\x20\x77\x69\x74\x68\x20\x2d\x2d\x70\x72\x6f\x66\x2c\x20\x74\x75\x72\x6e\x73\x20\x6f\x6e\x20\x62\x72\x6f\x77\x73\x65\x72\x2d\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x20\x6d\x6f\x64\x65\x20\x66\x6f\x72\x20\x70\x72\x6f\x66\x69\x6c\x69\x6e\x67\x2e")
DEFINE_BOOL(log_regexp, false, "\x4c\x6f\x67\x20\x72\x65\x67\x75\x6c\x61\x72\x20\x65\x78\x70\x72\x65\x73\x73\x69\x6f\x6e\x20\x65\x78\x65\x63\x75\x74\x69\x6f\x6e\x2e")
DEFINE_STRING(logfile, "\x76\x38\x2e\x6c\x6f\x67", "\x53\x70\x65\x63\x69\x66\x79\x20\x74\x68\x65\x20\x6e\x61\x6d\x65\x20\x6f\x66\x20\x74\x68\x65\x20\x6c\x6f\x67\x20\x66\x69\x6c\x65\x2e")
DEFINE_BOOL(logfile_per_isolate, true, "\x53\x65\x70\x61\x72\x61\x74\x65\x20\x6c\x6f\x67\x20\x66\x69\x6c\x65\x73\x20\x66\x6f\x72\x20\x65\x61\x63\x68\x20\x69\x73\x6f\x6c\x61\x74\x65\x2e")
DEFINE_BOOL(ll_prof, false, "\x45\x6e\x61\x62\x6c\x65\x20\x6c\x6f\x77\x2d\x6c\x65\x76\x65\x6c\x20\x6c\x69\x6e\x75\x78\x20\x70\x72\x6f\x66\x69\x6c\x65\x72\x2e")
DEFINE_BOOL(perf_basic_prof, false,
            "\x45\x6e\x61\x62\x6c\x65\x20\x70\x65\x72\x66\x20\x6c\x69\x6e\x75\x78\x20\x70\x72\x6f\x66\x69\x6c\x65\x72\x20\x28\x62\x61\x73\x69\x63\x20\x73\x75\x70\x70\x6f\x72\x74\x29\x2e")
DEFINE_NEG_IMPLICATION(perf_basic_prof, compact_code_space)
DEFINE_BOOL(perf_basic_prof_only_functions, false,
            "\x4f\x6e\x6c\x79\x20\x72\x65\x70\x6f\x72\x74\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x63\x6f\x64\x65\x20\x72\x61\x6e\x67\x65\x73\x20\x74\x6f\x20\x70\x65\x72\x66\x20\x28\x69\x2e\x65\x2e\x20\x6e\x6f\x20\x73\x74\x75\x62\x73\x29\x2e")
DEFINE_IMPLICATION(perf_basic_prof_only_functions, perf_basic_prof)
DEFINE_BOOL(perf_prof, false,
            "\x45\x6e\x61\x62\x6c\x65\x20\x70\x65\x72\x66\x20\x6c\x69\x6e\x75\x78\x20\x70\x72\x6f\x66\x69\x6c\x65\x72\x20\x28\x65\x78\x70\x65\x72\x69\x6d\x65\x6e\x74\x61\x6c\x20\x61\x6e\x6e\x6f\x74\x61\x74\x65\x20\x73\x75\x70\x70\x6f\x72\x74\x29\x2e")
DEFINE_NEG_IMPLICATION(perf_prof, compact_code_space)
DEFINE_BOOL(perf_prof_debug_info, false,
            "\x45\x6e\x61\x62\x6c\x65\x20\x64\x65\x62\x75\x67\x20\x69\x6e\x66\x6f\x20\x66\x6f\x72\x20\x70\x65\x72\x66\x20\x6c\x69\x6e\x75\x78\x20\x70\x72\x6f\x66\x69\x6c\x65\x72\x20\x28\x65\x78\x70\x65\x72\x69\x6d\x65\x6e\x74\x61\x6c\x29\x2e")
DEFINE_STRING(gc_fake_mmap, "\x2f\x74\x6d\x70\x2f\x5f\x5f\x76\x38\x5f\x67\x63\x5f\x5f",
              "\x53\x70\x65\x63\x69\x66\x79\x20\x74\x68\x65\x20\x6e\x61\x6d\x65\x20\x6f\x66\x20\x74\x68\x65\x20\x66\x69\x6c\x65\x20\x66\x6f\x72\x20\x66\x61\x6b\x65\x20\x67\x63\x20\x6d\x6d\x61\x70\x20\x75\x73\x65\x64\x20\x69\x6e\x20\x6c\x6c\x5f\x70\x72\x6f\x66")
DEFINE_BOOL(log_internal_timer_events, false, "\x54\x69\x6d\x65\x20\x69\x6e\x74\x65\x72\x6e\x61\x6c\x20\x65\x76\x65\x6e\x74\x73\x2e")
DEFINE_BOOL(log_timer_events, false,
            "\x54\x69\x6d\x65\x20\x65\x76\x65\x6e\x74\x73\x20\x69\x6e\x63\x6c\x75\x64\x69\x6e\x67\x20\x65\x78\x74\x65\x72\x6e\x61\x6c\x20\x63\x61\x6c\x6c\x62\x61\x63\x6b\x73\x2e")
DEFINE_IMPLICATION(log_timer_events, log_internal_timer_events)
DEFINE_IMPLICATION(log_internal_timer_events, prof)
DEFINE_BOOL(log_instruction_stats, false, "\x4c\x6f\x67\x20\x41\x41\x72\x63\x68\x36\x34\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x2e")
DEFINE_STRING(log_instruction_file, "\x61\x72\x6d\x36\x34\x5f\x69\x6e\x73\x74\x2e\x63\x73\x76",
              "\x41\x41\x72\x63\x68\x36\x34\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x6c\x6f\x67\x20\x66\x69\x6c\x65\x2e")
DEFINE_INT(log_instruction_period, 1 << 22,
           "\x41\x41\x72\x63\x68\x36\x34\x20\x69\x6e\x73\x74\x72\x75\x63\x74\x69\x6f\x6e\x20\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x20\x6c\x6f\x67\x67\x69\x6e\x67\x20\x70\x65\x72\x69\x6f\x64\x2e")

DEFINE_BOOL(redirect_code_traces, false,
            "\x6f\x75\x74\x70\x75\x74\x20\x64\x65\x6f\x70\x74\x20\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x20\x61\x6e\x64\x20\x64\x69\x73\x61\x73\x73\x65\x6d\x62\x6c\x79\x20\x69\x6e\x74\x6f\x20\x66\x69\x6c\x65\x20"
            "\x63\x6f\x64\x65\x2d\x3c\x70\x69\x64\x3e\x2d\x3c\x69\x73\x6f\x6c\x61\x74\x65\x20\x69\x64\x3e\x2e\x61\x73\x6d")
DEFINE_STRING(redirect_code_traces_to, NULL,
              "\x6f\x75\x74\x70\x75\x74\x20\x64\x65\x6f\x70\x74\x20\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x20\x61\x6e\x64\x20\x64\x69\x73\x61\x73\x73\x65\x6d\x62\x6c\x79\x20\x69\x6e\x74\x6f\x20\x74\x68\x65\x20\x67\x69\x76\x65\x6e\x20\x66\x69\x6c\x65")

DEFINE_BOOL(hydrogen_track_positions, false,
            "\x74\x72\x61\x63\x6b\x20\x73\x6f\x75\x72\x63\x65\x20\x63\x6f\x64\x65\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x73\x20\x77\x68\x65\x6e\x20\x62\x75\x69\x6c\x64\x69\x6e\x67\x20\x49\x52")

//
// Disassembler only flags
//
#undef FLAG
#ifdef ENABLE_DISASSEMBLER
#define FLAG FLAG_FULL
#else
#define FLAG FLAG_READONLY
#endif

// elements.cc
DEFINE_BOOL(trace_elements_transitions, false, "\x74\x72\x61\x63\x65\x20\x65\x6c\x65\x6d\x65\x6e\x74\x73\x20\x74\x72\x61\x6e\x73\x69\x74\x69\x6f\x6e\x73")

DEFINE_BOOL(trace_creation_allocation_sites, false,
            "\x74\x72\x61\x63\x65\x20\x74\x68\x65\x20\x63\x72\x65\x61\x74\x69\x6f\x6e\x20\x6f\x66\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x20\x73\x69\x74\x65\x73")

// code-stubs.cc
DEFINE_BOOL(print_code_stubs, false, "\x70\x72\x69\x6e\x74\x20\x63\x6f\x64\x65\x20\x73\x74\x75\x62\x73")
DEFINE_BOOL(test_secondary_stub_cache, false,
            "\x74\x65\x73\x74\x20\x73\x65\x63\x6f\x6e\x64\x61\x72\x79\x20\x73\x74\x75\x62\x20\x63\x61\x63\x68\x65\x20\x62\x79\x20\x64\x69\x73\x61\x62\x6c\x69\x6e\x67\x20\x74\x68\x65\x20\x70\x72\x69\x6d\x61\x72\x79\x20\x6f\x6e\x65")

DEFINE_BOOL(test_primary_stub_cache, false,
            "\x74\x65\x73\x74\x20\x70\x72\x69\x6d\x61\x72\x79\x20\x73\x74\x75\x62\x20\x63\x61\x63\x68\x65\x20\x62\x79\x20\x64\x69\x73\x61\x62\x6c\x69\x6e\x67\x20\x74\x68\x65\x20\x73\x65\x63\x6f\x6e\x64\x61\x72\x79\x20\x6f\x6e\x65")


// codegen-ia32.cc / codegen-arm.cc
DEFINE_BOOL(print_code, false, "\x70\x72\x69\x6e\x74\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x63\x6f\x64\x65")
DEFINE_BOOL(print_opt_code, false, "\x70\x72\x69\x6e\x74\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65")
DEFINE_BOOL(print_unopt_code, false,
            "\x70\x72\x69\x6e\x74\x20\x75\x6e\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65\x20\x62\x65\x66\x6f\x72\x65\x20"
            "\x70\x72\x69\x6e\x74\x69\x6e\x67\x20\x6f\x70\x74\x69\x6d\x69\x7a\x65\x64\x20\x63\x6f\x64\x65\x20\x62\x61\x73\x65\x64\x20\x6f\x6e\x20\x69\x74")
DEFINE_BOOL(print_code_verbose, false, "\x70\x72\x69\x6e\x74\x20\x6d\x6f\x72\x65\x20\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x20\x66\x6f\x72\x20\x63\x6f\x64\x65")
DEFINE_BOOL(print_builtin_code, false, "\x70\x72\x69\x6e\x74\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x63\x6f\x64\x65\x20\x66\x6f\x72\x20\x62\x75\x69\x6c\x74\x69\x6e\x73")

#ifdef ENABLE_DISASSEMBLER
DEFINE_BOOL(sodium, false,
            "\x70\x72\x69\x6e\x74\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x63\x6f\x64\x65\x20\x6f\x75\x74\x70\x75\x74\x20\x73\x75\x69\x74\x61\x62\x6c\x65\x20\x66\x6f\x72\x20\x75\x73\x65\x20\x77\x69\x74\x68\x20"
            "\x74\x68\x65\x20\x53\x6f\x64\x69\x75\x6d\x20\x63\x6f\x64\x65\x20\x76\x69\x65\x77\x65\x72")

DEFINE_IMPLICATION(sodium, print_code_stubs)
DEFINE_IMPLICATION(sodium, print_code)
DEFINE_IMPLICATION(sodium, print_opt_code)
DEFINE_IMPLICATION(sodium, hydrogen_track_positions)
DEFINE_IMPLICATION(sodium, code_comments)

DEFINE_BOOL(print_all_code, false, "\x65\x6e\x61\x62\x6c\x65\x20\x61\x6c\x6c\x20\x66\x6c\x61\x67\x73\x20\x72\x65\x6c\x61\x74\x65\x64\x20\x74\x6f\x20\x70\x72\x69\x6e\x74\x69\x6e\x67\x20\x63\x6f\x64\x65")
DEFINE_IMPLICATION(print_all_code, print_code)
DEFINE_IMPLICATION(print_all_code, print_opt_code)
DEFINE_IMPLICATION(print_all_code, print_unopt_code)
DEFINE_IMPLICATION(print_all_code, print_code_verbose)
DEFINE_IMPLICATION(print_all_code, print_builtin_code)
DEFINE_IMPLICATION(print_all_code, print_code_stubs)
DEFINE_IMPLICATION(print_all_code, code_comments)
#ifdef DEBUG
DEFINE_IMPLICATION(print_all_code, trace_codegen)
#endif
#endif


//
// VERIFY_PREDICTABLE related flags
//
#undef FLAG

#ifdef VERIFY_PREDICTABLE
#define FLAG FLAG_FULL
#else
#define FLAG FLAG_READONLY
#endif

DEFINE_BOOL(verify_predictable, false,
            "\x74\x68\x69\x73\x20\x6d\x6f\x64\x65\x20\x69\x73\x20\x75\x73\x65\x64\x20\x66\x6f\x72\x20\x63\x68\x65\x63\x6b\x69\x6e\x67\x20\x74\x68\x61\x74\x20\x56\x38\x20\x62\x65\x68\x61\x76\x65\x73\x20\x70\x72\x65\x64\x69\x63\x74\x61\x62\x6c\x79")
DEFINE_INT(dump_allocations_digest_at_alloc, -1,
           "\x64\x75\x6d\x70\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x73\x20\x64\x69\x67\x65\x73\x74\x20\x65\x61\x63\x68\x20\x6e\x2d\x74\x68\x20\x61\x6c\x6c\x6f\x63\x61\x74\x69\x6f\x6e")


//
// Read-only flags
//
#undef FLAG
#define FLAG FLAG_READONLY

// assembler.h
DEFINE_BOOL(enable_embedded_constant_pool, V8_EMBEDDED_CONSTANT_POOL,
            "\x65\x6e\x61\x62\x6c\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x65\x6d\x62\x65\x64\x64\x65\x64\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x70\x6f\x6f\x6c\x73\x20\x28\x41\x52\x4d\x2f\x50\x50\x43\x20\x6f\x6e\x6c\x79\x29")

DEFINE_BOOL(unbox_double_fields, V8_DOUBLE_FIELDS_UNBOXING,
            "\x65\x6e\x61\x62\x6c\x65\x20\x69\x6e\x2d\x6f\x62\x6a\x65\x63\x74\x20\x64\x6f\x75\x62\x6c\x65\x20\x66\x69\x65\x6c\x64\x73\x20\x75\x6e\x62\x6f\x78\x69\x6e\x67\x20\x28\x36\x34\x2d\x62\x69\x74\x20\x6f\x6e\x6c\x79\x29")
DEFINE_IMPLICATION(unbox_double_fields, track_double_fields)

DEFINE_BOOL(global_var_shortcuts, false, "\x75\x73\x65\x20\x69\x63\x2d\x6c\x65\x73\x73\x20\x67\x6c\x6f\x62\x61\x6c\x20\x6c\x6f\x61\x64\x73\x20\x61\x6e\x64\x20\x73\x74\x6f\x72\x65\x73")


// Cleanup...
#undef FLAG_FULL
#undef FLAG_READONLY
#undef FLAG
#undef FLAG_ALIAS

#undef DEFINE_BOOL
#undef DEFINE_MAYBE_BOOL
#undef DEFINE_INT
#undef DEFINE_STRING
#undef DEFINE_FLOAT
#undef DEFINE_ARGS
#undef DEFINE_IMPLICATION
#undef DEFINE_NEG_IMPLICATION
#undef DEFINE_NEG_VALUE_IMPLICATION
#undef DEFINE_VALUE_IMPLICATION
#undef DEFINE_ALIAS_BOOL
#undef DEFINE_ALIAS_INT
#undef DEFINE_ALIAS_STRING
#undef DEFINE_ALIAS_FLOAT
#undef DEFINE_ALIAS_ARGS

#undef FLAG_MODE_DECLARE
#undef FLAG_MODE_DEFINE
#undef FLAG_MODE_DEFINE_DEFAULTS
#undef FLAG_MODE_META
#undef FLAG_MODE_DEFINE_IMPLICATIONS

#undef COMMA
